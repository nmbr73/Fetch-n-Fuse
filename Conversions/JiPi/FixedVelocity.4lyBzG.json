{"Shader":{"ver":"0.1","info":{"id":"4lyBzG","date":"1542860565","viewed":1224,"name":"Fixed Velocity","username":"wyatt","description":"Artsy experiment","likes":58,"published":3,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"vec2 R;\nvec4 T (vec2 U) {return texture(iChannel0,U\/R);}\nvec4 D (vec2 U) {return texture(iChannel1,U\/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{   R = iResolution.xy;\n \tvec4 i = D(U),\n         t = T(U);\n \tvec2 d = vec2(\n    \tD(U+vec2(1,0)).x-D(U-vec2(1,0)).x,\n    \tD(U+vec2(0,1)).x-D(U-vec2(0,1)).x\n    );\n \tC = abs(sin(.2*sqrt(i)*vec4(1.,1.3,1.5,4)));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"vec2 R;float N;\nfloat hash(vec2 p)\n{ \/\/ Dave H\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\nfloat ln (vec2 p, vec2 a, vec2 b) { \/\/ returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)\/dot(b-a,b-a),0.,1.));\n}\nvec4 T ( vec2 U ) {return texture(iChannel0,U\/R);}\nfloat X (vec2 U0, vec2 U, vec2 U1, inout vec4 Q, in vec2 r) {\n    vec2 V = U + r;\n    vec4 t = T(V);\n    vec2 V0 = V - t.xy,\n         V1 = V + t.xy;\n    float P = t.z, rr = length(r);\n    Q.xy -= r*(P-Q.z)\/rr\/N;\n    return (0.5*(length(V0-U0)-length(V1-U1))+P)\/N;\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 U0 = U - T(U).xy,\n         U1 = U + T(U).xy;\n \tfloat P = 0.; Q = T(U0);\n if (length(Q.xy)==0.||iFrame < 1) {\n     \tfloat h = 6.3*hash(U);\n     \tQ = vec4(0.4*vec2(cos(h),sin(h)),0,0);\n        \t\n } else {\n \tN = 4.;;\n    P += X (U0,U,U1,Q, vec2( 1, 0));\n \tP += X (U0,U,U1,Q, vec2( 0,-1));\n \tP += X (U0,U,U1,Q, vec2(-1, 0));\n \tP += X (U0,U,U1,Q, vec2( 0, 1));\n \tQ.z = P;\n \tQ.xy=mix(Q.xy,0.4*normalize(Q.xy),0.01);\n \tvec4 mo = texture(iChannel2,vec2(0));\n \tfloat l = ln(U,mo.xy,mo.zw);\n \tif (mo.z > 0. && l < 10.) Q.z -= .1*(10.-l);\n \n }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"\/\/ Voronoi based particle tracking\n\nvec2 R;float N;\nvec4 T ( vec2 U ) {return texture(iChannel0,U\/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U\/R);}\nvoid swap (vec2 U, inout vec4 Q, vec2 u) {\n    vec4 p = P(U+u);\n    float dl = length(U-Q.xy) - length(U-p.xy);\n    float e = .1;\n    \/\/ allows for probabistic reproduction\n    Q = mix(Q,p,0.5+0.5*sign(floor(1e3*dl+0.5)));\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tU = U-2.*T(U).xy;\n \tU = U-2.*T(U).xy;\n \tQ = P(U);\n \tswap(U,Q,vec2(1,0));\n \tswap(U,Q,vec2(0,1));\n \tswap(U,Q,vec2(0,-1));\n \tswap(U,Q,vec2(-1,0));\n \tQ.xy = Q.xy + 2.*T(Q.xy).xy;\n \tQ.xy = Q.xy + 2.*T(Q.xy).xy;\n \tif (Q.z == 0.) Q = vec4(floor(U\/10.)*10.,U);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":260,"channel":0}],"code":"\/\/Render particles\nvec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U\/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U\/R);}\nvec4 D ( vec2 U ) {return texture(iChannel2,U\/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\tR = iResolution.xy;\n    C = P(U);\n \tC = vec4(vec3(smoothstep(1.5,0.5,length(C.xy-U))),1);\n \tC = C+vec4(0.995,0.98,0.95,1.)*(D(U));\n \tif(iFrame < 1) C = vec4(0);\n}\n","name":"Buffer D","description":"","type":"buffer"},{"inputs":[{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"\/\/ keep track of mouse\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 p = texture(iChannel0,fragCoord\/iResolution.xy);\n    if (iMouse.z>0.) {\n        if (p.z>0.) fragColor =  vec4(iMouse.xy,p.xy);\n    \telse fragColor =  vec4(iMouse.xy,iMouse.xy);\n    }\n    else fragColor = vec4(-iResolution.xy,-iResolution.xy);\n}","name":"Buffer B","description":"","type":"buffer"}]}}