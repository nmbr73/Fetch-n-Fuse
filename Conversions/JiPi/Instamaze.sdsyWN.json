{"Shader":{"ver":"0.1","info":{"id":"sdsyWN","date":"1642230079","viewed":285,"name":"Instamaze","username":"davidar","description":"I was playing with Lenia and happened across this Turing pattern","likes":18,"published":3,"flags":32,"usePreview":0,"tags":["convolution","diffusion","automata","life","cellular","maze","reaction","turing","continuous","artificial","lenia"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor = 1. - texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\/\/ modified from SmoothLife by davidar - https:\/\/www.shadertoy.com\/view\/Msy3RD\n\nconst int R = 10;         \/\/ space resolution = kernel radius\nconst float dt = .15;       \/\/ time step\n\nconst mat4 beta = mat4(.25,1,0,0, 1,.75,.75,0, 1,0,0,0, 0,0,0,0);   \/\/ kernel ring heights\nconst vec3 betaLen = vec3(2,3,1);    \/\/ kernel ring number\nconst vec3 mu = vec3(0.16, 0.22, 0.28);       \/\/ growth center\nconst vec3 sigma = vec3(0.025, 0.042, 0.025);   \/\/ growth width\nconst vec3 eta = vec3(1);     \/\/ growth strength\n\nconst float rho = 0.5;       \/\/ kernel center\nconst float omega = 0.15;    \/\/ kernel width\n\n#define G(z) exp(-.5*(z)*(z))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 pos = ivec2(fragCoord);\n\n    vec3 sum = vec3(0), total = vec3(0);\n    for (int x = -R; x <= R; x++) for (int y = -R; y <= R; y++) {\n        float r = length(vec2(x,y)\/float(R));\n        if (r > 1.) continue;\n        float val = texelFetch(iChannel0, pos + ivec2(x,y), 0).x;\n        vec3 height;\n        for (int i = 0; i < 3; i++)\n            height[i] = beta[i][int(r * betaLen[i])];\n        vec3 weight = height * G((fract(r * betaLen) - rho) \/ omega);\n        sum += val * weight;\n        total += weight;\n    }\n    vec3 avg = sum \/ total;\n\n    float r = texelFetch(iChannel0, pos, 0).x;\n    r = mix(r, dot(G((avg - mu) \/ sigma), eta), dt);\n    r = clamp(r, 0., 1.);\n\n    if (iFrame < 2)\n        r = noise(fragCoord\/float(R) + iTime*100.);\n    if (iMouse.z > 0.) {\n        float d = length((fragCoord.xy - iMouse.xy) \/ iResolution.xx);\n        if (d <= 5.*float(R)\/iResolution.x)\n        \tr = noise(fragCoord\/float(R) + iTime*100.);\n    }\n\n    fragColor = vec4(r);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\/\/ Noise simplex 2D by iq - https:\/\/www.shadertoy.com\/view\/Msf3WH\n\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    const float K1 = 0.366025404; \/\/ (sqrt(3)-1)\/2;\n    const float K2 = 0.211324865; \/\/ (3-sqrt(3))\/6;\n\n\tvec2  i = floor( p + (p.x+p.y)*K1 );\n    vec2  a = p - i + (i.x+i.y)*K2;\n    float m = step(a.y,a.x); \n    vec2  o = vec2(m,1.0-m);\n    vec2  b = a - o + K2;\n\tvec2  c = a - 1.0 + 2.0*K2;\n    vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot( n, vec3(70.0) );\n}\n","name":"Common","description":"","type":"common"}]}}