{"Shader":{"ver":"0.1","info":{"id":"3ljXDd","date":"1567530182","viewed":695,"name":"Sound visualizer","username":"stack_overflow","description":"Just playing with sound in Shadertoy :-)\nEnsure your browser is not blocking autoplay.","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["sound","visualizer"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"\/**\n Sound visualizer (c) by Alban Fichet\n\n Sound visualizer is licensed under a\n Creative Commons Attribution 4.0 International License (CC BY 4.0).\n\n You should have received a copy of the license along with this\n work. If not, see <https:\/\/creativecommons.org\/licenses\/by\/4.0\/>.\n*\/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 bA = texelFetch(iChannel0, ivec2(fragCoord), 0).rgb;\n    vec3 bB = texelFetch(iChannel1, ivec2(fragCoord), 0).rgb;\n   \n    vec3 col_rgb = bA + bB;\n\n    col_rgb = col_rgb*exp2(3.5);\n    \n    fragColor = vec4(pow(col_rgb, vec3(1.\/2.2)), 1.);\n} ","name":"Image","description":"","type":"image"},{"inputs":[{"id":13,"src":"\/media\/a\/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\/**\n Sound visualizer (c) by Alban Fichet\n\n Sound visualizer is licensed under a\n Creative Commons Attribution 4.0 International License (CC BY 4.0).\n\n You should have received a copy of the license along with this\n work. If not, see <https:\/\/creativecommons.org\/licenses\/by\/4.0\/>.\n*\/\n\nvec3 hue2rgb(in float h) {\n    vec3 k = mod(vec3(5., 3., 1.) + vec3(h*360.\/60.), vec3(6.));\n    return vec3(1.) - clamp(min(k, vec3(4.) - k), vec3(0.), vec3(1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord\/iResolution.xy;\n\n    float aspect = iResolution.x \/ iResolution.y;\n    float blurr = 0.3;\n    float sharpen = 1.7;\n    \n    vec2 maxWindow = vec2(3., 3.\/aspect);\n    uv = mix(-maxWindow, maxWindow, uv);\n\n    float r = dot(uv, uv);\n    float theta = atan(uv.y, uv.x) + 3.14;\n    \n    float t = abs(2.*theta \/ (2.*3.14) - 1.);\n\n    float signal = 2.0*texture(iChannel0,vec2(t,.75)).x;\n    float ampl = 2.0*texture(iChannel0,vec2(0.8,.25)).x;\n    \n    float v = 1. - pow(smoothstep(0., blurr, abs(r - signal)), 0.01);\n    float hue = pow(fract(abs(sin(theta\/2.) * ampl)), sharpen);\n    \t\n    fragColor = v * vec4(hue2rgb(fract(hue + iTime\/10.)), 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"\/**\n Sound visualizer (c) by Alban Fichet\n\n Sound visualizer is licensed under a\n Creative Commons Attribution 4.0 International License (CC BY 4.0).\n\n You should have received a copy of the license along with this\n work. If not, see <https:\/\/creativecommons.org\/licenses\/by\/4.0\/>.\n*\/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord\/iResolution.xy;\n\n    vec2 center = vec2(.5 + 0.15*sin(iTime));\n    float zoom = 1.02;\n    \n    vec4 prevParams = texture(iChannel0, (uv - center)\/zoom + center);\n    vec4 bB = texture(iChannel1, uv);\n\n    fragColor = mix(prevParams, bB, 0.1) ;\n}","name":"Buffer B","description":"","type":"buffer"}]}}