{"Shader":{"ver":"0.1","info":{"id":"4dlcRH","date":"1487038793","viewed":939,"name":"oil spill \/ chocolate syrup","username":"aferriss","description":"Click to draw or space to reset. Not sure why but seems to need iChannel0 of Buffer A to be removed and then added again to work now. ","likes":17,"published":3,"flags":48,"usePreview":0,"tags":["blur","oil","convolution","feedback","evaporation"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"\/\/light from https:\/\/www.shadertoy.com\/view\/MsGSRd\n\nfloat colormap_red(float x) {\n    return 1.61361058036781E+00 * x - 1.55391688559828E+02;\n}\n\nfloat colormap_green(float x) {\n    return 9.99817607003891E-01 * x + 1.01544260700389E+00;\n}\n\nfloat colormap_blue(float x) {\n    return 3.44167852062589E+00 * x - 6.19885917496444E+02;\n}\n\nvec4 colormap(float x) {\n    float t = x * 255.0;\n    float r = clamp(colormap_red(t) \/ 255.0, 0.0, 1.0);\n    float g = clamp(colormap_green(t) \/ 255.0, 0.0, 1.0);\n    float b = clamp(colormap_blue(t) \/ 255.0, 0.0, 1.0);\n    return vec4(r, g, b, 1.0);\n}\n\nfloat getVal(vec2 uv)\n{\n    return length(texture(iChannel0,uv).xyz);\n}\n    \nvec2 getGrad(vec2 uv,float delta)\n{\n    vec2 d=vec2(delta,0);\n    return vec2(\n        getVal(uv+d.xy)-getVal(uv-d.xy),\n        getVal(uv+d.yx)-getVal(uv-d.yx)\n    )\/delta;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 res = iResolution.xy;\n    vec2 uv = fragCoord.xy \/ res;\n    \n    vec3 n = vec3(getGrad(uv,1.0\/iResolution.y),350.0);\n    n=normalize(n);\n    vec3 light = normalize(vec3(0.01,0.75,2.25));\n    \n    \/\/interactive light\n    \/\/vec3 light = normalize(vec3(iMouse.xy \/ iResolution.y,1.25) - vec3(fragCoord.xy \/ iResolution.y,0.0));\n\n    float diff=clamp(dot(n,light),0.5,1.0);\n    float spec=clamp(dot(reflect(light,n),vec3(0,0,-1)),0.0,1.0);\n    spec=pow(spec,64.0)*1.5;\n    \n    float osc = sin(iTime*0.25)*0.5 + 0.5;\n    vec4 fb = texture(iChannel0, uv);\n    float avg = dot(fb.rgb, vec3(1.0))*0.333333;\n    \n    fb = colormap(fb.r);\n    fb = fb.grba;\n    fb.rgb += vec3(0.05,-0.05,0.0);\n    \/\/fb*=0.95;\n\t\n    fragColor = fb * diff + spec;\n\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":16,"src":"\/media\/a\/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"const float brushSize = 25.0;\n\nfloat diff(vec2 t, vec2 b){\n \tvec3 t1 = texture(iChannel0, t).xyz;\n    vec3 t2 = texture(iChannel0, b).xyz;\n    return dot(t1, vec3(1.0)) * dot(t2, vec3(1.0));\n}\n\nbool reset() {\n    return texture(iChannel3, vec2(32.5\/256.0, 0.5) ).x > 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 uv = fragCoord.xy \/ res;\n    \n    vec2 offs = vec2(0.4 \/ res);\n        \n    vec2 top = uv + vec2(0.0,-offs.y);\n    vec2 bottom = uv + vec2(0.0,offs.y);\n    vec2 left = uv + vec2(-offs.x, 0.0);\n    vec2 right = uv + vec2(offs.x, 0.0);\n    \n    float gradient1 = diff(top, bottom);\n    float gradient2 = diff(left, right);\n    \n    vec4 fc = vec4( ((length(gradient1) + length(gradient2))*0.07));\n    \n    if(iFrame < 15 || reset() ){\n        fragColor = texture(iChannel1, uv);\n    } else {\n        vec4 old = texture(iChannel0, uv);\n        \/\/fc.a *= 0.38;\n        fc.rgba = (fc.rgba * fc.a) + (old*(1.0 - fc.a));\n        \/\/fc += 0.05;\n    \tfragColor = clamp(fc, vec4(0.0), vec4(1.0));\n        \n    }\n    \n    if(iMouse.z >= 0.0){        \n        fragColor += vec4(1.0 - clamp(length(iMouse.xy - fragCoord) - brushSize, 0.0,1.0));\n    }\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"\/\/blur 1\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 uv = fragCoord.xy \/ res;\n    vec2 step = vec2(1.750 \/ res);\n    vec4 u = texture(iChannel0, uv + vec2(0.0,-step.y));\n    vec4 d = texture(iChannel0, uv + vec2(0.0, step.y));\n    vec4 l = texture(iChannel0, uv + vec2(-step.x,0.0));\n    vec4 r = texture(iChannel0, uv + vec2(step.x,0.0));\n    vec4 c = texture(iChannel0, uv);\n    \n    vec4 o = (u+d+l+r+c)*0.2;\n    fragColor = o;\/\/\n    fragColor.a = texture(iChannel0, uv).a;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"\/\/blur 2\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 uv = fragCoord.xy \/ res;\n    vec2 step = vec2(1.00 \/ res);\n    vec4 u = texture(iChannel0, uv + vec2(0.0,-step.y));\n    vec4 d = texture(iChannel0, uv + vec2(0.0, step.y));\n    vec4 l = texture(iChannel0, uv + vec2(-step.x,0.0));\n    vec4 r = texture(iChannel0, uv + vec2(step.x,0.0));\n    vec4 o = (u+d+l+r)*0.25;\n    fragColor = o;\/\/\n    fragColor.a = texture(iChannel0, uv).a;\n}","name":"Buffer C","description":"","type":"buffer"}]}}