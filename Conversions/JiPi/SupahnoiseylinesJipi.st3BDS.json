{
 "ver": "0.1",
 "info": {
  "id": "st3BDS",
  "date": "0",
  "viewed": 0,
  "name": "SupahNoiseyLines JiPi",
  "description": "Noisey lines",
  "likes": 0,
  "published": "Private",
  "usePreview": 0,
  "tags": [
   "noise",
   "lines",
   "wallpaper",
   "supah"
  ],
  "hasliked": 0,
  "parentid": "7dcSzN",
  "parentname": "Supah Noisey lines"
 },
 "renderpass": [
  {
   "inputs": [],
   "outputs": [
    {
     "id": "4dfGRr",
     "channel": 0
    }
   ],
   "code": "// Created by Fabio Ottaviani\n// www.supah.it\n// instagram.com/supahfunk\n\n\n// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat s(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nfloat L(float t, float s, float e, float b){\n    float s1 = smoothstep(s - b, s + b, t);\n    float s2 = smoothstep(e + b, e - b, t);\n    return s1 * s2;\n}\n\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 R = iResolution.xy,\n         u = (I-.5*R)/R.y;\n         \n    vec3 C = vec3(0.);\n    float num = 20.,\n          t = iTime;\n    for (float i = 0.; i < num; i++) {\n        float n = i/num;\n        vec2 uv = u;\n        float no = s(uv+sin(t+i));\n        uv += smoothstep(0.1,0.4,length(uv))*no*.1;\n        uv = rotate(u+vec2(sin(t) * .2, sin(t*.3) * .2), t*.5 + no*.15 + n * 3.14);\n        vec3 col = vec3(n*1.5, .4 + n*.4, .6);\n        C += L(uv.y, 0., 0., 0.01 + sin(0.01+iTime*3.)*.0013 - length(uv)*0.01) * 1.5 * col;\n    }\n    C *= C + C + (1.-length(u));\n    O = vec4(C,1.0);\n}",
   "name": "Image",
   "description": "",
   "type": "image"
  }
 ]
}