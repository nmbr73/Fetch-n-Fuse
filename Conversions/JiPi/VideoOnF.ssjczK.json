{"Shader":{"ver":"0.1","info":{"id":"ssjczK","date":"1643813789","viewed":32,"name":"Fork Video on f elevations 785","username":"elevations01","description":"edges as motion blur with feedback. Buf B does the edges and feeds them back to itself based on Buf A. Buf A does video with Buf B as green screen filler.","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["video","edge","multipass"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor = max(texture(iChannel0,uv),texture(iChannel1,uv+0.002));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":36,"src":"\/media\/a\/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 px = 3.0\/vec2(640.0,360.0);\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec4 tex = texture(iChannel0,uv);\n    float newG = min(tex.g,max(tex.r,tex.b));\n    float d = abs(tex.g - newG);\n    tex.g = newG * 0.9;\n    if (d > 0.0)\n    {\n        \/\/px*= sin(iTime+uv.yx*3.0)*.35;\n        uv -= 0.5*px;\n        vec4 tex2 = texture(iChannel1,uv);\n        uv += px;\n        tex2 += texture(iChannel1,uv);\n        uv.x -= px.x -.018 *sin(iTime*4.1+tex2.r);\n        uv.y += px.y +.015 * cos(iTime*4.1+tex2.g);\n        tex2 += texture(iChannel1,uv);\n        uv.y -= px.y;\n        tex2 += texture(iChannel1,uv);\n        tex2 \/= 4.013;\n        tex2 = clamp(tex2*1.02-0.012,0.0,1.0);\n        tex = max(clamp(tex*(1.0-d),0.0,1.0),mix(tex,tex2,smoothstep(-0.3,0.23,d)));\n     }\n        \n\tfragColor = tex;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 px = 1.5 \/ vec2(640.0,360.0);\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec4 tx = texture(iChannel1,uv);\n    float dist = distance(tx,texture(iChannel1,uv+px));\n    px.y *= -1.0;\n    dist += distance(tx,texture(iChannel1,uv+px));\n    px.x *= -1.0;\n    dist += distance(tx,texture(iChannel1,uv+px));\n    px.y *= -1.0;\n    dist += distance(tx,texture(iChannel1,uv+px));\n    uv *= mat2(0.99,0.01,-0.001,0.99);\n\tfragColor = texture(iChannel0,uv+0.002)*vec4(0.91,0.847,0.0,0.0)+\n        vec4(smoothstep(0.3,0.8,dist),smoothstep(0.3,1.4,dist),0.0,1.0)*.175;\n}","name":"Buffer B","description":"","type":"buffer"}]}}