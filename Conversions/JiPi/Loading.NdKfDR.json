{"Shader":{"ver":"0.1","info":{"id":"NdKfDR","date":"1658063039","viewed":217,"name":"LOADING","username":"manu210404","description":"I tried my best to recreate this amazing post on r\/loadingicon:\n[url]https:\/\/www.reddit.com\/r\/loadingicon\/comments\/ets3a9\/everything_is_awesome_about_this_loading_animation\/[\/url]\n","likes":23,"published":3,"flags":0,"usePreview":0,"tags":["loading","arc","loadinganimation"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"#define PI 3.1415926535\n#define T iTime*3.\n#define PELLET_SIZE 1.\/16.\n#define PELLET_NUM 2\n#define THICKNESS 0.13\n#define RADIUS 0.7\n\/\/#define COUNTER_ROT \/\/ counter rotation that keeps the arc at the same place\n#define SMOOTH_MOT \/\/ smooth motion of pellets\n#define SMOOTH_SHP \/\/ smooth shapes\n\nfloat sdArc( in vec2 p, in float a, in float ra, float rb ) \/\/ By iq: https:\/\/www.shadertoy.com\/view\/wl23RK\n{\n    a *= PI;\n    vec2 sc = vec2( sin(a),cos(a) );\n    p.x = abs(p.x);\n    return ((sc.y*p.x>sc.x*p.y) ? length(p-sc*ra) : \n                                  abs(length(p)-ra)) - rb;\n}\n\nmat2 rot( float a )\n{\n    a *= PI;\n    float s = sin(a), c = cos(a);\n    return mat2( c,-s,s,c );\n}\n\nfloat s( float x )\n{\n#ifdef SMOOTH_MOT\n    return smoothstep( 0.,1.,x );\n#endif\n    return x;\n}\n\nfloat sminCubic( float a, float b, float k ) \/\/ By iq: https:\/\/iquilezles.org\/articles\/smin\/\n{\n    float h = max( k-abs(a-b), .0 )\/k;\n    return min( a, b ) - h*h*h*k*(1.\/6.);\n}\n\nvec3 pal( float x )\n{\n    return mix( vec3(.988,.569,.086), vec3(1,.082,.537), x );\n}\n\nfloat f(float x) {\n    return -2.*PELLET_SIZE*x;\n}\n\nfloat dist(vec2 p){\n#ifdef COUNTER_ROT\n    p *= rot(-f(T-.5));\n#endif\n    int n = PELLET_NUM;\n    float N = float(n);\n\n    float d1 = sdArc( p*rot( f(floor(T)) + 1. ), \n                      .5 - PELLET_SIZE, \n                      RADIUS, \n                      THICKNESS);\n    float d2 = 9e9;\n    for (int i = 0; i < n; i++) {\n        float j = float(i);\n        float t = s( fract((T + j)\/N) );\n        float a = mix( -.5, .5 - f(1.), t) + f(T);\n        d2 = min( sdArc( p * rot(a),\n                         PELLET_SIZE,\n                         RADIUS,\n                         THICKNESS), d2);\n    }\n#ifdef SMOOTH_SHP\n    float r = abs( length(p) - RADIUS ) - THICKNESS; \/\/ sdf of ring containing the arcs \n    float d = sminCubic( d1, d2, .2 );\n    return max( d, r );\n#endif\n    return min(d1, d2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord\/iResolution.xy - .5;\n    vec2 p = (2.*fragCoord - iResolution.xy)\/iResolution.y;\n    \n\n    float d = dist( p ); \/\/ shape\n    float m = smoothstep( .01,.0,d );\n    \n    float d1 = dist( p + vec2(0.,.15) ); \/\/ shadow\n    float s = smoothstep( .2,-.4,d1 );\n    \n    m = max(s,m); \/\/ combine shadow and shape\n    \n    vec3 col = m*pal( p.x - p.y + .5 ); \/\/ color shape and shadow\n    col += 1. - m; \/\/ white background\n    col *= 1. - 1.5 * dot(uv,uv); \/\/ vignette\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}}