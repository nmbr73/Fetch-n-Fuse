{"Shader":{"ver":"0.1","info":{"id":"WlVGzw","date":"1578534166","viewed":410,"name":"Gravifluid","username":"michael0884","description":"Wave fluid interacting with a scalar grav field","likes":16,"published":3,"flags":32,"usePreview":0,"tags":["waves","fluid","nonlinear"],"hasliked":0},"renderpass":[{"inputs":[{"id":27,"src":"\/media\/a\/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","ctype":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ Fork of \"Oil and water\" by michael0884. https:\/\/shadertoy.com\/view\/wtVGzW\n\/\/ 2020-01-09 01:38:11\n\nvoid mainImage( out vec4 fragColor, in vec2 p )\n{\n    vec4 Q = pixel(ch0, p);\n    vec4 Qv = pixel(ch1, p);\n    \n    \n    vec2 g = 0.1*normalize(Grad(ch0, p));\n    vec3 v = vec3(g,  sqrt(1.-sq(g)) );\n    vec3 col = texture(ch2, v).xyz;\n    \/\/fluid 1 amplitude\n    float fd1 = smoothstep(0.0, 0.7, 1.*dot(Q.xy,Q.xy)\/sq(a1)) * ( 1. + 0.001*p.y);\n    \/\/fluid 2 amplitude\n    float fd2 = log(Q.z*Q.z+1.);\n\n    \/\/ Output to screen\n    fragColor.xyz = col*(sin(vec3(1., 1., 0.)*fd1) + sin(vec3(0., 0.3, 1.)*fd2));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pixel(a, p) texture(a, p\/vec2(textureSize(a,0)))\n#define texel(a, p) texelFetch(a, ivec2(p-0.5),0)\n#define s2d iResolution.xy\n#define ch0 iChannel0\n#define ch1 iChannel1\n#define ch2 iChannel2\n#define ch3 iChannel3\n\n#define dt 0.5\n\n\nconst float scale = .6;\n\/\/fluid 1 density \nconst float a1 = 0.8;\n\/\/fluid 2 density\nconst float a2 = 1.;\n\n#define sign vec4(1.,1.,1,1.)\n\n\/\/set to 0 if you want a gas-like behaviour\n\/\/fluid 1 fluid-like\/gas-like regulator \nconst float b1 = 0.99;\n\/\/fluid 2 fluid-like\/gas-like regulator \nconst float b2 = 0.;\n\n\/\/interaction energy cost\nconst float ie = -0.1;\n\n\/\/initial conditions for amplitudes\nconst float amp = 0.6;\nconst vec4 fluid1_Q = amp*vec4(a1,0,0,0);\nconst vec4 fluid1_Qv = amp*vec4(0,a1,0,0); \/\/minus for antifluid\nconst vec4 fluid2_Q = 0.*amp*vec4(0,0,a2,0);\nconst vec4 fluid2_Qv = 0.*amp*vec4(0,0,0,a2);\nconst float mouser = 25.;\nconst float initr = 20.;\n\n\nfloat sq(float x){ return x*x; }\nfloat cb(float x){ return x*x*x; }\nfloat sq(vec2 x){ return dot(x,x); }\n\nconst float pressure = 0.001;\n\n\/\/wave potential\nfloat P(vec4 Q, vec2 p)\n{\n    \/\/fluid 1 amplitude\n    float fd1 = length(Q.xy);\n    \/\/fluid 2 amplitude\n    float fd2 = length(Q.zw);\n    \n    \/\/liquifier term 1\n    float liq1 = 1. - b1*exp(-3.*sq(fd1-a1));      \n    \/\/liquifier term 2\n    float liq2 = 1. - b2*exp(-3.*sq(fd2-a2));     \n    float grav = 0.002*length(p - vec2(400,225));\n        \n    float E =(scale*(cb(fd1)*liq1)*(1. - tanh(0.15*Q.z)) + 0.000*sq(Q.z));\n    return 20.*tanh(0.05*E);\n}\n\n\/\/force\n#define d 0.001\nvec4 F(vec4 Q, vec2 p)\n{\n    vec3 dx = 0.5*vec3(-d,0.,d);\n    return vec4(P(Q + dx.zyyy, p) - P(Q + dx.xyyy, p),\n                P(Q + dx.yzyy, p) - P(Q + dx.yxyy, p),\n                P(Q + dx.yyzy, p) - P(Q + dx.yyxy, p),\n                P(Q + dx.yyyz, p) - P(Q + dx.yyyx, p))\/d;\n}\n\n\/\/Laplacian operator\nvec4 Laplace(sampler2D ch, vec2 p)\n{\n    vec3 dx = vec3(-1,0.,1);\n    return texel(ch, p+dx.xy)+texel(ch, p+dx.yx)+texel(ch, p+dx.zy)+texel(ch, p+dx.yz)-4.*texel(ch, p);\n}\n\nvec2 Grad(sampler2D ch, vec2 p)\n{\n    vec3 dx = vec3(-1,0.,1);\n    return vec2(length(texel(ch, p+dx.zy)),length(texel(ch, p+dx.yz))) - length(texel(ch, p));\n}\n\nfloat dborder(vec2 x, vec2 s)\n{\n    return min(min(min(x.x, x.y), s.x-x.x),s.y-x.y);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"void mouse(inout vec4 Q, inout vec4 Qv, vec2 p)\n{\n    if(iMouse.z > 0.)\n    {\n        float f1 = exp(-sq((p-iMouse.xy)\/mouser));\n        Q += 0.1*fluid1_Q*f1;\n        Qv += 0.1*fluid1_Qv*f1;\n    }\n}\n\nvoid mainImage( out vec4 Q, in vec2 p )\n{\n    \/\/get old value\n    Q = texel(ch0, p);\n    vec4 Qv = texel(ch1, p);\n    \n    Q += Qv*dt + vec4(0.0001,0.0001,0.001,0.001)*Laplace(ch0, p);\n   \n    mouse(Q,Qv,p);\n    \n    Q.z *= 1.-0.1*exp(-0.002*sq(dborder(p, s2d)));\n    \n    if(iFrame < 1) \n    {\n        float f1 = step(sq((p-s2d*0.3)\/initr),1.);\n        float f2 = step(sq((p-s2d*0.7)\/initr),1.);\n        Q = fluid1_Q*f1*(1.-f2) + fluid1_Q*f2*(1.-f1);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"void mouse(inout vec4 Q, inout vec4 Qv, vec2 p)\n{\n    if(iMouse.z > 0.)\n    {\n        float f1 = exp(-sq((p-iMouse.xy)\/mouser));\n        Q += 0.1*fluid1_Q*f1;\n        Qv += 0.1*fluid1_Qv*f1;\n    }\n}\n\n\nvoid mainImage( out vec4 Qv, in vec2 p )\n{\n    \/\/get old value\n    vec4 Q = texel(ch0, p);\n    Qv = texel(ch1, p);\n    \n   \tQv += dt*(Laplace(ch0, p) - sign*F(Q, p));\n    \n    mouse(Q,Qv,p);\n    \n    if(iFrame < 1) \n    {\n        float f1 = step(sq((p-s2d*0.3)\/initr),1.);\n        float f2 = step(sq((p-s2d*0.7)\/initr),1.);\n        Qv = fluid1_Qv*f1*(1.-f2) + fluid1_Qv*f2*(1.-f1);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"void mouse(inout vec4 Q, inout vec4 Qv, vec2 p)\n{\n    if(iMouse.z > 0.)\n    {\n        float f1 = exp(-sq((p-iMouse.xy)\/mouser));\n        Q += 0.1*fluid1_Q*f1;\n        Qv += 0.1*fluid1_Qv*f1;\n    }\n}\n\nvoid mainImage( out vec4 Q, in vec2 p )\n{\n    \/\/get old value\n    Q = texel(ch0, p);\n    vec4 Qv = texel(ch1, p);\n    \n    Q += Qv*dt + 0.0005*Laplace(ch0, p);\n   \n    mouse(Q,Qv,p);\n    \n    if(iFrame < 1) \n    {\n        float f1 = step(sq((p-s2d*0.3)\/initr),1.);\n        float f2 = step(sq((p-s2d*0.7)\/initr),1.);\n        Q = fluid1_Q*f1*(1.-f2) + fluid1_Q*f2*(1.-f1);\n    }\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":260,"channel":0}],"code":"void mouse(inout vec4 Q, inout vec4 Qv, vec2 p)\n{\n    if(iMouse.z > 0.)\n    {\n        float f1 = exp(-sq((p-iMouse.xy)\/mouser));\n        Q += 0.1*fluid1_Q*f1;\n        Qv += 0.1*fluid1_Qv*f1;\n    }\n}\n\n\nvoid mainImage( out vec4 Qv, in vec2 p )\n{\n    \/\/get old value\n    vec4 Q = texel(ch0, p);\n    Qv = texel(ch1, p);\n    \n   \tQv += dt*(Laplace(ch0, p) - sign*F(Q, p));\n    \n    mouse(Q,Qv,p);\n    \n    if(iFrame < 1) \n    {\n        float f1 = step(sq((p-s2d*0.3)\/initr),1.);\n        float f2 = step(sq((p-s2d*0.7)\/initr),1.);\n        Qv = fluid1_Qv*f1*(1.-f2) + fluid1_Qv*f2*(1.-f1);\n    }\n}","name":"Buffer D","description":"","type":"buffer"}]}}