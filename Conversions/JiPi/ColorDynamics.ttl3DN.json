{"Shader":{"ver":"0.1","info":{"id":"ttl3DN","date":"1556412626","viewed":762,"name":"Color Dynamics","username":"wyatt","description":"another wave displacement experiment (meaning the velocity is stored in the displacement of the particle and its wave, not in a vector). The dynamics are mediated by 4 color charges. Still thanking rory for thinking to use distance functions to sort","likes":21,"published":3,"flags":32,"usePreview":0,"tags":["particles"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"void mainImage( out vec4 Q, vec2 U )\n{\n    vec4 a = A(U);\n    Q = .7-.03*B(U)+3.*abs(hash(a.z))*smoothstep(2.,0.,abs(length(U-a.xy)-a.w));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"void swap (inout vec4 Q, vec2 U, vec2 r) {\n\tvec4 n = A(U+r);\n    if (abs(length(n.xy-U)-n.w)<abs(length(Q.xy-U)-Q.w)) Q = n;\n}\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    \n    Q = A(U);\n    swap(Q,U, vec2(0,1));\n    swap(Q,U, vec2(1,0));\n    swap(Q,U,-vec2(0,1));\n    swap(Q,U,-vec2(1,0));\n    swap(Q,U, vec2(1,1));\n    swap(Q,U, vec2(1,-1));\n    swap(Q,U,-vec2(1,1));\n    swap(Q,U,-vec2(1,-1));\n    swap(Q,U, vec2(4,4));\n    swap(Q,U, vec2(-4,4));\n    swap(Q,U,-vec2(4,4));\n    swap(Q,U,-vec2(-4,4));\n    vec4 \n        id = hash(Q.z);\n    vec4\n        n = B(Q.xy+vec2(0,1)),\n        e = B(Q.xy+vec2(1,0)),\n        s = B(Q.xy-vec2(0,1)),\n        w = B(Q.xy-vec2(1,0));\n    vec2 \n        x = vec2(e.x-w.x,n.x-s.x),\n        y = vec2(e.y-w.y,n.y-s.y),\n        z = vec2(e.z-w.z,n.z-s.z),\n        a = vec2(e.w-w.w,n.w-s.w);\n    Q.xy -= id.x*x+id.y*y+id.z*z+id.w*a;\n    if (iMouse.z>0.&&length(U-iMouse.xy) < 10.) {\n        vec2 u = floor(U\/5.+0.5)*5.;\n        vec4 n = vec4(\n        \tu,\n            u.x+R.x*u.y,1.+5.*hash(u.y+R.y*u.x).x\n        );\n        if (abs(length(n.xy-U)-n.w)<abs(length(Q.xy-U)-Q.w)) Q = n;\n    }\n    if (iFrame < 1) {\n        vec2 u = floor(U\/20.+0.5)*20.;\n        float h = hash(u.y+R.y*u.x).x;\n    \tQ = vec4(\n        \tu,\n            u.x+R.x*u.y,1.+20.*h*h\n        );\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"void mainImage( out vec4 Q, vec2 U )\n{\n    \n    Q = B(U)*0.5;\n    \n    for (float i = -I; i < I; i++) {\n        vec2 x = U+2.*vec2(i,0); \n        vec4 a = A(x);\n        float r = smoothstep(1.,.5,abs(length(a.xy-x)-a.w));\n    \tQ += O*exp(-M*i*i)*r*hash(a.z);\n    }\n    \n    if (iFrame < 1) {\n    \tQ = vec4(0);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"void mainImage( out vec4 Q, vec2 U )\n{\n    \n    Q = B(U)*0.5;\n    \n    for (float i = -I; i < I; i++) {\n        vec2 x = U+2.*vec2(0,i); \n        vec4 a = A(x);\n    \tQ += exp(-M*i*i)*a;\n    }\n    \n    if (iFrame < 1) {\n    \tQ = vec4(0);\n    }\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define M .01*vec4(1,2,4,8)\n#define I 15.\n#define O .5*sqrt(vec4(1,2,4,8))\nvec4 hash (float p) \/\/ Dave (Hash)kins\n{\n\tvec4 p4 = fract(vec4(p) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+19.19);\n    return floor(fract((p4.xxyz+p4.yzzw)*p4.zywx)*10.)\/10.-.25;\n    \n}\n#define R iResolution.xy\n#define A(U) texture(iChannel0, (U)\/R)\n#define B(U) texture(iChannel1, (U)\/R)","name":"Common","description":"","type":"common"}]}}