{"Shader":{"ver":"0.1","info":{"id":"MltBz7","date":"1539155755","viewed":622,"name":"Liquid Crystal","username":"wyatt","description":"Click to see a region close up! \n\nLiquid crystals are fascinating and beautiful and are used in cool applications (like the pixels of the LCD youre probably looking at)\nhttps:\/\/www.youtube.com\/watch?v=DLluRjH_gWM","likes":17,"published":3,"flags":32,"usePreview":0,"tags":["simulation","physics"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"#define H 1.73205080757\nvec2 R;\nvec2 hash(vec2 p) \/\/ Dave H\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\nfloat intersect (vec2 coes) {\n    float det = coes.x*coes.x-4.*coes.y;\n    if (det < 0.) return 1e4;\n    return 0.5*(-coes.x-sqrt(det));\n}\nfloat sphere (vec3 p, vec3 d, vec3 c, float r) {\n\tc = p-c;\n    return intersect(vec2(2.*dot(c,d),dot(c,c)-r*r));\n}\nfloat ellipse (vec3 p, vec3 d, vec3 a, vec3 b, float r) {\n\ta = p-a;b = p-b;\n    float \n        rr = r*r,\n        ad = dot(a,d),\n        bd = dot(b,d),\n        aa = dot(a,a),\n        bb = dot(b,b);\n    return intersect(vec2(\n    \tad*aa-ad*bb+bd*bb-bd*aa-rr*(ad+bd),\n        -aa*bb+0.25*(aa*aa+bb*bb+rr*rr)+0.5*(aa*bb-rr*(aa+bb))\n    )\/(ad*ad+bd*bd-rr-2.*ad*bd));\n}\nvec3 norEllipse (vec3 p, vec3 a, vec3 b) {\n    return normalize(normalize(p-a)+normalize(p-b));\n}\nfloat plane (vec3 p, vec3 d) {\n\treturn  dot(-p,vec3(0,0,1))\/dot(d,vec3(0,0,1));\n}\nvec3 O (vec2 U) {return normalize(texture(iChannel0,U\/R).xyz);}\nvec3 W (vec2 U) {return texture(iChannel1,U\/R).zyz;}\nfloat D (vec3 p, vec3 d, vec2 v, float e, inout vec4 color) {\n    \n    vec2 U = floor(p.xy+0.5+v);\n    if (fract(0.5*U.y)<0.5) U.x += 0.5;\n    vec3 o = O(U);\n    vec2 h = hash(U)*2.-1.;\n    float t = 2.*iTime+h.x*100.;\n    vec3 q = vec3(U+0.5*h+0.3*vec2(sin(t),-cos(t)),sin(t)),\n         a = q + o,\n         b = q - o;\n    float f = ellipse(p,d,a,b,2.1);\n    if (f < e) {\n    \te = f;\n        p += d*e;\n        vec3 n = norEllipse(p,a,b);\n        float m = dot(n,o);\n        color = dot(n,vec3(0,0,-1))*vec4(o.xzy*0.5+0.5,1);\n    }\n    return e;\n}\nvec4 X (vec3 p, vec3 d) {\n\tp += d*plane(p, d);\n\tvec4 color = vec4(0);\n    float e = 1e3;\n    for (int x = -1; x<=1; x++)\n    for (int y = -1; y<=1; y++)\n        e = D (p, d, vec2(x,y), e, color);\n    return color;\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{   R = iResolution.xy;\n \tU = 2.*(U-0.5*R)\/R.y;\n \tvec3 p = vec3(iMouse.xy+19.*U,-1),\n         d = normalize(vec3(U*0.1,1));\n \tC = X(p,d);\n \tvec3 o = O(gl_FragCoord.xy);\n \tif (iMouse.z <1.) C.xyz = (o.xzy*0.5+0.5);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\/\/ Orientation\nvec2 R;\nvec2 hash(vec2 p) \/\/ Dave H\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\nvec3 rot (vec3 p, vec3 d) {\n    float t = length(d);\n    if (t==0.)return p;\n    d = normalize(d);\n    vec3 q = p-d*dot(d,p);\n   \treturn p+(q)*(cos(t)-1.) + cross(d,q)*sin(t);\n}\nvec3 O (vec2 U) {return texture(iChannel0,U\/R).xyz;}\nvec3 W (vec2 U) {return texture(iChannel1,U\/R).zyz;}\nvoid mainImage( out vec4 C, in vec2 U )\n{   R = iResolution.xy;\n    C.xyz = rot(O(U),W(U));\n \tif (length(C.xyz)==0.) C.xyz = vec3(0,0,1);\n \tvec3 ne = 0.125*(\n        O(U+vec2(0, 1))+\n        O(U+vec2(0,-1))+\n        O(U+vec2( 1,0))+\n        O(U+vec2(-1,0))+\n        O(U+vec2(1, 1))+\n        O(U+vec2(1,-1))+\n        O(U+vec2( 1,1))+\n        O(U+vec2(-1,1))+\n        O(U+vec2(-1, 1))+\n        O(U+vec2(-1,-1))+\n        O(U+vec2( 1,-1))+\n        O(U+vec2(-1,-1))\n        \n    );\n \tC.xyz = mix(C.xyz,ne,.01);\n \tC.xyz = normalize(C.xyz)*0.05;\n \n if (iFrame < 1) {\n     C = vec4(0,0,1,0);\n \tif (length(U-0.5*R)<2.) C.xyz = vec3(-1,0.001,0);\n }\n \n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"\/\/Angular momentum\nvec2 R;\nvec2 hash(vec2 p) \/\/ Dave H\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\nvec3 F (vec3 A, vec3 B) {\n    A = A-B;\n\treturn A\/dot(A,A)\/length(A);\n}\nvec3 T (vec3 a, vec3 b, vec3 A, vec3 B) {\n\tvec3\n        ap = a+A,\n        an = a-A,\n        bp = b+B,\n        bn = b-B,\n        Fp = F(ap,bp)-F(ap,bn),\n        Fn = F(an,bn)-F(an,bp);\n    return cross(A,Fp)-cross(A,Fn);\n}\nvec3 O (vec2 U) {return texture(iChannel0,U\/R).xyz;}\nvec3 W (vec2 U) {return texture(iChannel1,U\/R).zyz;}\nvec3 P (vec2 U) {\n    if (fract(0.5*U.y)<0.5) U.x -= 0.5;\n    U.x *= 1.732050808;\n    vec2 h = hash(floor(U))*2.-1.;\n    float t = 2.*iTime+h.x*1000.;\n    return vec3(U+.5*h+0.5*vec2(sin(t),-cos(t)),0);\n}\nvec3 S (vec2 U) {\n\tvec3 \n        t = vec3(0),\n        o = O(U);\n    for (int x = -2; x <= 2; x++)\n    for (int y = -2; y <= 2; y++)\n    {if (x==0&&y==0) continue;\n    \tt += T(P(U),P(U+2.481*vec2(x,y)),o,O(U+1.1*vec2(x,y)));\n    }\n\treturn W(U) + t;\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{   R = iResolution.xy;\n    C.xyz = S(U);\n \tvec3 ne = 0.25*(\n        W(U+vec2(0, 1))+\n        W(U+vec2(0,-1))+\n        W(U+vec2( 1,0))+\n        W(U+vec2(-1,0))\n    );\n \tC.xyz = mix(C.xyz,ne,.5);\n \tif (length(C.xyz)>.2)C.xyz=normalize(C.xyz)*0.2;\n \tif (iFrame < 1) C = vec4(0,0,0,0);\n}","name":"Buffer B","description":"","type":"buffer"}]}}