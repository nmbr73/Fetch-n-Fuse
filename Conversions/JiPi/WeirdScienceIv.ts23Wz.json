{"Shader":{"ver":"0.1","info":{"id":"ts23Wz","date":"1548694346","viewed":749,"name":"Weird Science IV","username":"wyatt","description":"A strange reaction inspired by the universe. It's all a cosmic flow. Stable cycles making love.","likes":21,"published":3,"flags":40,"usePreview":0,"tags":["weird","science"],"hasliked":0},"renderpass":[{"inputs":[{"id":26,"src":"\/media\/a\/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","ctype":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"vec2 R;\nvec4 F (vec2 U) {return texture(iChannel0,U\/R);}\nvec4 E (vec2 U) {return texture(iChannel2,U\/R);}\nvec4 I (vec2 U) {return texture(iChannel3,U\/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\tR = iResolution.xy;\n    vec4 i = I(U);\n \tvec4 f = F(U);\n \tvec4 e = E(U);\n \tC = 0.5+0.5*sin(1.*length(e)+10.*vec4(1,1.3,1.5,4)*f.z);\n\n \tvec3 n = normalize(vec3(f.xy,.1));\n \tC *= 0.5+0.5*texture(iChannel1,n);\n \tC *= 1.-i.xxxx+2.*length(i.zw);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\/\/ Fluid\nvec2 R;\nvec4 I (vec2 U) {return texture(iChannel3,U\/R);}\nvec4 f (vec2 U) {return texture(iChannel0,U\/R);}\nvec4 F (vec2 U) {\n    \/\/ advection step :\n    \/\/\tcount backwards through spacetime\n    \/\/  what was going on two half times ago?\n    U-=0.5*f(U).xy;\/\/ where I am - half speed = where I was half a time ago\n    U-=0.5*f(U).xy;\/\/ where I was half time ago - half speed = where I was last\n    return f(U);   \/\/ now what ever was I doing one time ago?\n}\nvec4 E (vec2 U) {return texture(iChannel1,U\/R);}\nvec4 M (vec2 U) {return texture(iChannel2,U\/R);}\nvec4 X (vec2 U, in vec4 C, vec2 r) {\n\tvec4 n = F(U+r); \/\/ neighbor\n    vec2 rp = vec2(-r.y,r.x); \/\/ perpiduclar to r\n    return vec4(\n        \t r *(n.z-C.z) \/\/  pressure gradent\n        +\t rp*(n.w*C.w)\/\/ + spin product\n       \t+\t C.xy, \t\t\/\/  + advected velocity\n \/\/====================\/\/   = equals velocity dxy\/dt\n        dot(r ,n.xy-C.xy)+n.z,    \/\/ pressure = radial change in velocity + pressure between cells\n    \tdot(rp,n.xy-C.xy)-(n.w)); \/\/ spin     = circular change in velocity + spin between cells\n    \n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n   R = iResolution.xy;\n   C = F(U);\n   float r2 = sqrt(2.)*0.5; \/\/ without renormalization, the neighborhood needs to be equidistant to the cell\n   \/\/ calculate the sum of all neighbor interactions\n   C = X(U,C,vec2( 1, 0)) + \n       X(U,C,vec2( 0, 1))+\n       X(U,C,vec2(-1, 0))+\n       X(U,C,vec2( 0,-1))+\n       X(U,C,vec2( r2, r2))+\n       X(U,C,vec2(-r2, r2))+\n       X(U,C,vec2(-r2,-r2))+\n       X(U,C,vec2( r2,-r2));\n   C \/= 8.; \/\/ divide by the neighborhood size\n  \n   C.xy += E(U).xy*(1.-I(U).x);\n   if (iFrame < 1) C = vec4(0);\n   if (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) C.xy *= 0.;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"\/\/ ELECTRIC FIELD\nvec2 R;\nfloat ln (vec2 p, vec2 a, vec2 b) { \/\/ returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)\/dot(b-a,b-a),0.,1.));\n}\nvec2 v (vec2 U) {return texture(iChannel0, U\/R).xy;}\nvec3 E (vec3 U) {\n    U.xy -= 0.5*v(U.xy);\n    U.xy -= 0.5*v(U.xy);\n\treturn texture(iChannel1,U.xy\/R).xyz;\n}\nvec3 M (vec3 U) {\n    U.xy -= 0.5*v(U.xy);\n    U.xy -= 0.5*v(U.xy);\n\treturn texture(iChannel2,U.xy\/R).xyz;\n}\nvec4 I (vec2 U) {return texture(iChannel3,U\/R);}\nvec3 X (vec3 U, vec3 R) {\n\treturn cross(R,M(U+R));\n}\n\nvoid mainImage( out vec4 c, in vec2 u )\n{\tR = iResolution.xy;\n \n \tvec3 U = vec3(u,0);\n \t# define l inversesqrt (2.)\n \tvec3 mu = 0.25*(E(U+vec3(1,0,0))+E(U-vec3(1,0,0))+E(U+vec3(0,1,0))+E(U-vec3(0,1,0)));\n    vec3 C = mix(E(U),mu,0.1)\n        + (- M(U) + \n      ( X(U, vec3( 1, 0,0)) + \n        X(U, vec3(-1, 0,0)) + \n        X(U, vec3( 0, 1,0)) + \n        X(U, vec3( 0,-1,0)) + \n        X(U, vec3( l, l,0)) + \n        X(U, vec3( l,-l,0)) +\n        X(U, vec3(-l,-l,0)) +\n        X(U, vec3(-l, l,0)) ) \/ 8.);\n \t\n \tC.xy += I(U.xy).zw;\n \n \tif (iFrame < 1) C = vec3(0);\n\tc = vec4(C,0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"\/\/ MAGNETIC FIELD\nvec2 R;\nvec4 I (vec2 U) {return texture(iChannel3,U\/R);}\nvec2 v (vec2 U) {return texture(iChannel0,U\/R).xy;}\nvec3 E (vec3 U) {\n\treturn texture(iChannel1,U.xy\/R).xyz;\n}\nvec3 M (vec3 U) {\n    U.xy -= 0.5*v(U.xy);\n    U.xy -= 0.5*v(U.xy);\n\treturn texture(iChannel2,U.xy\/R).xyz;\n}\nvec3 X (vec3 U, vec3 R) {\n\treturn cross(R,E(U+R));\n}\nvoid mainImage( out vec4 c, in vec2 u )\n{\tR = iResolution.xy;\n \n \tvec3 U = vec3(u,0);\n \t# define l inversesqrt (2.)\n \tvec3 mu = 0.25*(M(U+vec3(1,0,0))+M(U-vec3(1,0,0))+M(U+vec3(0,1,0))+M(U-vec3(0,1,0)));\n    vec3 C = mix(M(U),mu,0.1) +( E(U) -\n      ( X(U, vec3( 1, 0,0)) + \n        X(U, vec3(-1, 0,0)) + \n        X(U, vec3( 0, 1,0)) + \n        X(U, vec3( 0,-1,0)) + \n        X(U, vec3( l, l,0)) + \n        X(U, vec3( l,-l,0)) +\n        X(U, vec3(-l,-l,0)) +\n        X(U, vec3(-l, l,0)) ) \/ 8.);\n \tif (iFrame < 1) C = vec3(0);\n \tc = vec4(C,0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":260,"channel":0}],"code":"\/\/ ion particles\nvec2 R;\nvec2 v (vec2 U) {return texture(iChannel0,U\/R).xy;}\nvec4 i (vec2 U) {return texture(iChannel3,U\/R);}\nvec4 I (vec2 U) {\n    U-=0.5*v(U).xy;\n    U-=0.5*v(U).xy;\n    return i(U);\n}\nvec4 E (vec2 U) {return texture(iChannel1,U\/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n   R = iResolution.xy;\n   C = I(U);\n   float n = I(U+vec2(0,1)).x,\n         e = I(U+vec2(1,0)).x,\n       \t s = I(U-vec2(0,1)).x,\n         w = I(U-vec2(1,0)).x,\n         mu = 0.25*(n+e+s+w);\n   \n   if (iMouse.z>0.)C.x = mix(C.x,1.,smoothstep(10.,0.,length(U-iMouse.xy)));\n   \t  if (C.x < 0.5)  C.x -= 0.01*C.x*C.x;\n else if (C.x > 0.6)  C.x += 0.01*(1.-C.x)*(1.-C.x);\n    \n   C.zw = -vec2(n-s,-e+w)-vec2(e-w,n-s);\n    \n   if (iFrame < 1) {\n       C = vec4(0);\n       C.x = smoothstep(0.15*R.y,0.15*R.y-3.,length(U-0.5*R));\n   }\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define pi2 6.2831\n#define m_c 261.625565\n#define pw 1.05946309436\nvec3 hash31(float p) \/\/ Dave Hoskins\n{\n   vec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n   p3 += dot(p3, p3.yzx+19.19);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}\nfloat nl (float time, float nonlinear) {\n    time *= .25;\n\treturn \n        nonlinear*(\n            4.*cos(time)+5.*cos(2.*time)+8.*cos(4.*time)+.5*cos(8.*time)\n        );\n}\nfloat X (\n    \t float time,\n    \t float phase,\n    \t float octave, \n         float note, \n         float nonlinear,\n         float attack,\n         float sustain,\n         float release\n        ) {\n    float phi = phase*pi2 + nl(time,nonlinear);\n    float w = m_c*pi2*exp2(octave)*pow(pw,note);\n    float envelope = smoothstep(0.,attack,time-phase)*smoothstep(release,0.,time-phase-attack-sustain);\n    return (cos(w*time-phi)+cos(0.5*w*time-phi))*envelope;\n}\n\nvec2 mainSound( in int samp, float t )\n{\n    float a = 0.;\n    float time = 0.;\n    float note = 0.;\n    for (float i = 0.; i < 400.; i++) {\n        vec3 h  = hash31(i);\n        float duration = 8.*exp2(-floor(h.x*6.));\n        float octave   = mod(20.*h.y*h.y+floor(i\/100.),5.)-3.;\n        note = 4.*mod(floor(h.z*4000.),3.);\n        time += duration+.15;\n        \n        a += X (t,time,octave,note,15.*sin(0.3*i+3.*t*h.z),.01,duration*0.8,0.1);\n        \n        if (mod(i,100.)<1.) time = 0.;\n        if (note > 12.||note<-12.) note = 0.;\n        \n    }\n    \n    return vec2(atan(0.2*a)\/2.);\n}","name":"Sound","description":"","type":"sound"}]}}