{"Shader":{"ver":"0.1","info":{"id":"NtGSRW","date":"1640222425","viewed":129,"name":"happy bouncing variation 4","username":"leon","description":"shader about boucing animation, space transformation, easing functions, funny shape and colorful vibes.","likes":19,"published":3,"flags":0,"usePreview":0,"tags":["colorful","animation"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"\/\/ \"happy bouncing v4\"\n\/\/ shader about boucing animation, space transformation, easing functions,\n\/\/ funny shape and colorful vibes.\n\/\/ by leon denise (2021-12-22)\n\/\/ licensed under hippie love conspiracy\n\n\/\/ using Inigo Quilez works:\n\/\/ arc sdf from https:\/\/www.shadertoy.com\/view\/wl23RK\n\/\/ color palette https:\/\/iquilezles.org\/www\/articles\/palettes\/palettes.htm\n\nfloat globalSpeed = 0.5;\nconst float pi = 3.1415;\n\nvec2 animation(vec2 p, float t)\n{\n    float ta = fract(t)*6.283;\n    float tt = t;\n    \n    p.y -= 0.15; \/\/ sidebar\n    p *= rot(sin(ta)*.2*ss(.0,.5,p.y+.2)); \/\/ swing\n    \n    return p;\n}\n\nvec4 buddy (vec2 pp, vec3 tint, float t, float ii)\n{\n    \/\/ result\n    float scene = 100.;\n    vec3 col = vec3(0);\n    \n    \/\/ variables\n    vec2 p, q;\n    float shape, zhape;\n    float ta = t*6.283;\n    float bodySize = 0.25;\n    float turn = sin(t*6.283*.5-.5)*2.;\n    \n    \/\/ body\n    p = animation(pp, t);\n    float body = circle(p, bodySize);\n\n    p = animation(pp, t-.01)+vec2(0.,-1.)*bodySize;\n    p.x = abs(p.x)-0.1;\n    zhape = circle(p*vec2(.7,.4), 0.02);\n    body = smin(body, zhape, .04);\n    \n    \/\/ mouth\n    p = animation(pp, t + .02)+vec2(-.2*turn,.5)*bodySize;\n    q = p;\n    shape = smin(body, circle(p, 0.1), 0.2);\n    add(shape, tint, scene, col);\n    col *= clp(zhape*10.+.5)*-.2+1.;\n    p *= 1.5;\n    p.x = abs(p.x)-0.05;\n    shape = sdArc(p+vec2(0,.1), pi\/-3., 2., .05, .02);\n    add(shape, tint*.6, scene, col);\n    \n    \/\/ nose\n    shape = circle(q-vec2(0,.02), .04);\n    add(shape, tint*.5, scene, col);\n    col *= shadow(shape);\n\n    \/\/ eyes\n    shape = 100.;\n    p = animation(pp, t+.02);\n    p = p - vec2(.2*turn, .6)*bodySize;\n    p.x = abs(p.x)-0.04;\n    add(circle(p, 0.04), vec3(1)*ss(-.2,0.2,p.y+.1), shape, col);\n    add(circle(p+vec2(.01), 0.02), vec3(0), shape, col);\n    col *= shadow(shape);\n    scene = min(scene, shape);\n    \n    return vec4(col, scene);\n}\n\nvoid mainImage( out vec4 color, in vec2 pixel )\n{\n    vec2 uv = pixel\/iResolution.xy;\n    color = vec4(.25)*step(uv.y,0.1); \/\/ sidebar\n    \n    vec4 shape;\n    vec2 pos = (pixel-vec2(0.5,0)*iResolution.xy)\/iResolution.y;\n    vec2 p, pp;\n    \n    \/\/ rolling buddy\n    p = pos;\n    p.y -= 0.1;\n    p.x -= fract(iTime*globalSpeed*.5+.61)*2.-1.;\n    p *= rot(pos.x*20.);\n    shape = vec4(vec3(0.976,0.976,0.424)*ss(.1,.0,length(p)), circle(p,.04));\n    add(shape, color);\n    p.y += 0.02;\n    add(vec4(vec3(0), sdArc(p, pi\/-2., 1., 0.02, .005)), color);\n    p.x = abs(p.x)-0.01;\n    p.y -= 0.03;\n    add(vec4(vec3(0), circle(p, 0.006)), color);\n    color.rgb *= shadow(shape.a);\n    \n    \/\/ bouncing buddies\n    const float instances = 5.;\n    for (float i = 0.; i < instances; ++i)\n    {\n        float ii = i\/(instances);\n        float iy = i\/(instances-1.);\n        float t = (iTime*globalSpeed + iy);\n        \n        \/\/ distribute instances\n        p = pos;\n        p.x += (iy*2.-1.)*.6;\n        p.y -= .15;\n        \n        \/\/ scale\n        p *= 2.;\n        \n        \/\/ jump animation\n        float ta = fract(t)*6.283;\n        float tt = sin(clp(fract(t*.5)*3.)*3.14);\n        p += vec2(0.,-abs(sin(ta))*2.)*tt*.3; \/\/ looping\n        p.y *= 1.+.1*sin(ta*4.)*tt; \/\/ stretch\n        \n        float dist = length(animation(p,t));\n        \n        \/\/ color palette by Inigo Quilez\n        vec3 tint = .5+.5*cos(vec3(0.,.3,.6)*6.28 + i*5. + dist*-2.);\n        \n        \/\/ glow\n        color.rgb += tint * clp(-dist+.4)*2.;\n        \n        \/\/ add shape to frame\n        add(buddy(p, tint, t, ii), color);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n#define fill(sdf) (smoothstep(.001, 0., sdf))\n#define repeat(p,r) (mod(p,r)-r\/2.)\n#define ss(a,b,t) (smoothstep(a,b,t))\n#define clp(t) (clamp(t,0.,1.))\n\n\/\/ add shape to layer\nvoid add (in float sdf, in vec3 col, inout float sdfLayers, inout vec3 colLayers)\n{\n    colLayers = mix(colLayers, col, fill(sdf));\n    sdfLayers = min(sdf, sdfLayers);\n}\n\n\/\/ add shape to frame\nvoid add(in vec4 shape, inout vec4 frame)\n{\n    if (shape.a < 0.) frame.rgb = shape.rgb;\n}\n\n\/\/ soft drop shadow from shape \nfloat shadow (float sdf)\n{\n    return clamp(sdf+.9,0.,1.);\n}\n\n\/\/ Inigo Quilez\n\/\/ https:\/\/iquilezles.org\/www\/articles\/distfunctions2d\/distfunctions2d.htm\nfloat sdArc( in vec2 p, in float ta, in float tb, in float ra, float rb )\n{\n    p.y -= ra; \/\/ offset y\n    vec2 sca = vec2(sin(ta),cos(ta));\n    vec2 scb = vec2(sin(tb),cos(tb));\n    p *= mat2(sca.x,sca.y,-sca.y,sca.x);\n    p.x = abs(p.x);\n    float k = (scb.y*p.x>scb.x*p.y) ? dot(p,scb) : length(p);\n    return sqrt( dot(p,p) + ra*ra - 2.0*ra*k ) - rb;\n}\nfloat smin( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)\/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n    \n\/\/ snippets\nmat2 rot (float a) { float c=cos(a),s=sin(a); return mat2(c,-s,s,c); }\nfloat circle (vec2 p, float size)\n{\n    return length(p)-size;\n}","name":"Common","description":"","type":"common"}]}}