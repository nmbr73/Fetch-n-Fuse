{"Shader":{"ver":"0.1","info":{"id":"7tfcRj","date":"1649077452","viewed":96,"name":"Dream like Stylized Sobel Edge","username":"NakedBowman","description":"Stylized sobel edge detection, still a work in progress","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["sobel","edge","dream","styalized"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/media\/a\/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"float greyScale(vec3 color){\n    return (color.r + color.g + color.b) \/ 3.0;\n\n\n}\nvec3 post(vec3 color){\n    return floor(color*15.+0.5)\/15.;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float[9] Xsobel_kernel =\n    float[](-1.0, 0.0, 1.0,\n            -2.0, 0.0, 2.0,\n            -1.0, 0.0, 1.0);\n            \n    float[9] Ysobel_kernel =\n    float[](-1.0, -2.0, -1.0,\n            0.0, 0.0, 0.0,\n            1.0, 2.0, 1.0);\n            \n    vec2 uv = fragCoord\/iResolution.xy;\n    vec3 og = texture(iChannel2, uv).rgb;\n    og = pow(og,vec3(1.\/2.2));\n    og = post(og);\n    vec3 pat = mix(vec3(0.4,0.2,0.4), vec3(0.5,0.7,0.8), uv.x+uv.y);\n    og = mix(pat, og, greyScale(og)*2.2);\n    \n    float threshold = .14;\n    float Xedge = 0.;\n    float Yedge = 0.;\n    float kernelPointer = 0.;\n    for(float x = 0.0; x < 3.0; x++){\n        for(float y = 0.0; y < 3.0; y++){\n            float result = greyScale(texture(iChannel0, uv+vec2(x-1.,y-1.)\/iResolution.xy).rgb);\n            Xedge += result * Xsobel_kernel[int(kernelPointer)];\n            kernelPointer++;\n        }\n    }\n    kernelPointer = 0.;\n    for(float x = 0.0; x < 3.0; x++){\n        for(float y = 0.0; y < 3.0; y++){\n            float result = greyScale(texture(iChannel0, uv+vec2(x-1.,y-1.)\/iResolution.xy).rgb);\n            Yedge += result  * Ysobel_kernel[int(kernelPointer)];\n            kernelPointer++;\n        }\n    }\n   \n   \/\/remapping values\n  \/\/Xedge += 0.5;\n  \/\/Yedge += 0.5;\n   float finalG = sqrt(Xedge*Xedge + Yedge*Yedge);\n   if(finalG < threshold){\n       finalG = 0.; \n   }\n    \n  \n\n   float edgeOrientation = atan(Yedge\/Xedge);\n   float g = edgeOrientation;\n   vec3 col = vec3(finalG);\n    \n    fragColor = vec4(og-col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":5,"src":"\/media\/a\/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy\/iResolution.xy;\n    float kernelSize = 6.;\n    vec3 col = vec3(0.);\n    for(float i = 0.; i < kernelSize; i++){\n        float pointer = i - floor(kernelSize * 0.5);\n        col += texture(iChannel0, uv + vec2(i,0.0)\/iResolution.xy ).rgb;\n    }\n    col\/= kernelSize;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec2 uv = fragCoord.xy\/iResolution.xy;\n    float kernelSize = 6.;\n    vec3 col = vec3(0.);\n    for(float i = 0.; i < kernelSize; i++){\n        float pointer = i - floor(kernelSize * 0.5);\n        col += texture(iChannel0, uv + vec2(0.0,i)\/iResolution.xy ).rgb;\n    }\n    col\/= kernelSize;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":5,"src":"\/media\/a\/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy\/iResolution.xy;\n    float kernelSize = 20.;\n    vec3 col = vec3(0.);\n    for(float i = 0.; i < kernelSize; i++){\n        float pointer = i - floor(kernelSize * 0.5);\n        col += textureLod(iChannel0, uv + vec2(i,0.0)\/iResolution.xy,3. ).rgb;\n    }\n    col\/= kernelSize;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":260,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec2 uv = fragCoord.xy\/iResolution.xy;\n    float kernelSize = 20.;\n    vec3 col = vec3(0.);\n    for(float i = 0.; i < kernelSize; i++){\n        float pointer = i - floor(kernelSize * 0.5);\n        col += textureLod(iChannel0, uv + vec2(0.0,i)\/iResolution.xy, 3. ).rgb;\n    }\n    col\/= kernelSize;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}}