--[[--
Parameter-Test.Fuse
--]]--

FuRegisterClass("ParameterTest", CT_Tool, {
	REGS_Category = "Fuses",
	REGS_OpIconString = "ptst",
	REGS_OpDescription = "Parameter Test Fuse",
	REG_OpNoMask = true,
	REG_NoBlendCtrls = true,
	REG_NoObjMatCtrls = true,
	REG_NoMotionBlurCtrls = true,
	})


function Create()



  local id='ABCD'
  local script='/Users/nmbr73/Projects/Fetch-n-Fuse/.experiments/parameter-test'
  local fetch = '/Users/nmbr73/Projects/Fetch-n-Fuse/fetch'
  local params


  params = [[{argv={[0]="parameter-test.py","foo","bar"}}]]


  self:AddInput("Click (py)", "btn1", {
		LINKID_DataType = "Text",
		INPID_InputControl = "ButtonControl",
		INP_DoNotifyChanged = true,
		INP_External = false,
    BTNCS_Execute = 'comp:RunScript("'..script..'.py",'..params..')'
	})

  params = [[{arg={[0]="parameter-test.py","foo","bar"}}]]

  self:AddInput("Click (runscript on lua)", "btn2", {
		LINKID_DataType = "Text",
		INPID_InputControl = "ButtonControl",
		INP_DoNotifyChanged = true,
		INP_External = false,
    BTNCS_Execute = 'comp:RunScript("'..script..'.lua",'..params..')'
	})


  params="--id '"..id.."'"

  self:AddInput("Click (io.popen on python)", "btn3", {
		LINKID_DataType = "Text",
		INPID_InputControl = "ButtonControl",
		INP_DoNotifyChanged = true,
		INP_External = false,
    BTNCS_Execute =   [[local handle = io.popen("python ]]..script..[[.py ]]..params..[[")
    local result = handle:read("*a")
    handle:close()
    print(result)]]
    })


    params=[[--h]]

    self:AddInput("Click (fetch)", "btn4", {
      LINKID_DataType = "Text",
      INPID_InputControl = "ButtonControl",
      INP_DoNotifyChanged = true,
      INP_External = false,
      BTNCS_Execute =   [[
        local handle = io.popen("python3 /Users/nmbr73/Projects/Fetch-n-Fuse/fetch ]]..params..[[")
        local result = handle:read("*a")
        handle:close()
        print(result)
        ]]
    })


  InImage = self:AddInput("Input", "Input", {
		LINKID_DataType = "Image",
		LINK_Main = 1,
		})

	OutImage = self:AddOutput("Output", "Output", {
		LINKID_DataType = "Image",
		LINK_Main = 1,
		})
end

function Process(req)
	local img = InImage:GetValue(req)
	img:Use()
	OutImage:Set(req, img)
end
