{"Shader":{"ver":"0.1","info":{"id":"WlSGDK","date":"1561060796","viewed":604,"name":"Paths Through Time","username":"wyatt","description":"The state of a fluid dynamical system is continuously re-ordering itself and therefore the time complexity of a solution is proportional to the size of the system times the time evolution. The Universe is discrete, recursive, and local.","likes":21,"published":3,"flags":32,"usePreview":0,"tags":["fluid","automata","physics"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = 1.-max(sin(3.*D(U)*(1.+.2*vec4(1,2,3,4))),0.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\/\/ Calculate forces and pressure\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 \n        n = A(U+vec2(0,1)),\n        e = A(U+vec2(1,0)),\n        s = A(U-vec2(0,1)),\n        w = A(U-vec2(1,0));\n    Q.xy -= \n        \/\/ pressure force\n        0.25*vec2(e.z-w.z,n.z-s.z)+\n        \/\/ magnus force\n        0.25*Q.w*vec2(n.w-s.w,e.w-w.w);\n    \/\/ divergence\n    Q.z  = 0.25*(s.y-n.y+w.x-e.x+n.z+e.z+s.z+w.z);\n    \/\/ curl\n    Q.w = 0.25*(s.x-n.x+w.y-e.y);\n    \n    \/\/Boundary conditions\n    vec2 JET = vec2(.5+.25*sin(float(iFrame)\/500.),0.1)*R;\n    if (iMouse.z>0.) JET = iMouse.xy;\n    Q.xy = mix(Q.xy,vec2(0,.7),0.3*smoothstep(1.,-1.,length(U-JET)-6.));\n    Q.xy = mix(Q.xy,vec2(0,-.7),0.3*smoothstep(1.,-1.,length(U-(R-JET))-6.));\n    if (iFrame<1) Q = vec4(0);\n    if (U.x<4.||U.y<4.||R.x-U.x<4.||R.y-U.y<4.)Q.xyw*=0.;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0, (U)\/R)\n#define C(U) texture(iChannel2, (U)\/R)\n#define D(U) texture(iChannel3, (U)\/R)\n\n#define N 5.","name":"Common","description":"","type":"common"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"\/\/ Advect along velocity and curl feild\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    for (float i = 0.; i< N;i++) {\n        Q = A(U);\n        float co = cos(Q.w\/N), si = sin(Q.w\/N);\n        U -= Q.xy*mat2(co,-si,si,co)\/N;\n    }\n    Q = A(U);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"void swap (vec2 U, vec2 r, inout vec4 Q) {\n\tvec4 n = C(U+r);\n    if (length(U-n.xy) < length(U-Q.xy)) Q = n;\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = C(U);\n    swap(U, vec2(1,0),Q);\n    swap(U, vec2(0,1),Q);\n    swap(U,-vec2(1,0),Q);\n    swap(U,-vec2(0,1),Q);\n    swap(U, vec2(1,1),Q);\n    swap(U,vec2(-1,1),Q);\n    swap(U,vec2(1,-1),Q);\n    swap(U,-vec2(1,1),Q);\n    \n    Q.xy += A(Q.xy).xy;\n    \n    if (iFrame < 1) {\n    \tQ = vec4(floor(0.5+U),0,0);\n    }\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":260,"channel":0}],"code":"void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = mix(D(U),\n            vec4(1)*smoothstep(.1+10.*length(A(U).xy),0.,length(U-C(U).xy))\n                              ,.005);\n}","name":"Buffer D","description":"","type":"buffer"}]}}