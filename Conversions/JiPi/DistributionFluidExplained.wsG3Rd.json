{"Shader":{"ver":"0.1","info":{"id":"wsG3Rd","date":"1570739306","viewed":728,"name":"Distribution Fluid Explained","username":"wyatt","description":"See Comments --> ","likes":38,"published":3,"flags":32,"usePreview":0,"tags":["fluid","distribution","latticeboltzmann"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"\/*\n\tA,B,C,and D are the same and have have the fluid code\n\n\tEach pixel stores +Energy,-Energy in each direction\n\t\n\tQ.xyzw = ( +x,-x,+y,-y )\n\t\n\tAt each step, the fluid completely exchanges its state\n\twith its neighborhood. \n\n\t+x goes to the +x cell, -x goes to the -x cell\n\t+y goes to the +y cell, -y goes to the -y cell\n\n\tThen the fluid accelerates\n\t\n\tThe gradient of pressure polarizes the Energy\n\n\t(+x,-x) += dP\/dx * (-,+)\n\t(+y,-y) += dP\/dy * (-,+)\n\n*\/\n\n\n\/\/ This part makes the lines on the fluid.\n\n\n#define X 3.\n#define L 3.\nfloat time;\nvec2 v (vec4 b) {\n\treturn 10.*(vec2(b.x-b.y,b.z-b.w));\n}\nfloat ln (vec2 p, vec2 a, vec2 d,float i) {\n    float r = clamp(dot(p-a,d)\/dot(d,d),0.,1.);\n\treturn length(p-a-d*r);\n}\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    vec2 a = v(T(U));\n    Q =  vec4(1);\n    for (int x = -3; x <= 3; x++)\n    for (int y = -3; y <= 3; y++) {\n        vec2 V = floor(U\/X+0.5+vec2(x,y))*X;\n        V += X*h(V)-.5;\n        V += X*sin(10.*h(2.*V).x+vec2(0,3.14\/2.)+iTime)-.5;\n        a = v(T(V));\n        for (float i = 0.; i < L; i++) {\n            Q += smoothstep(1.5,0.25,ln(U,V,X*a.xy\/L,i));\n            V += X*a.xy\/L;\n            a = v(T(V));\n        }   Q += smoothstep(1.5,0.25,ln(U,V,X*a.xy\/L,L));\n    }\n    Q  *= .05+.2*T(U).xzyw;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\/\/ FLUID EVOLUTION\n\/\/ Velocity\nvec2 v (vec4 b) {\n\treturn vec2(b.x-b.y,b.z-b.w);\n}\n\/\/ Pressure\nfloat p (vec4 b) {\n\treturn 0.25*(b.x+b.y+b.z+b.w);\n}\n\/\/ TRANSLATE COORD BY Velocity THEN LOOKUP STATE\nvec4 A(vec2 U) {\n    U-=.5*v(T(U));\n    U-=.5*v(T(U));\n\treturn T(U);\n}\nvoid mainImage( out vec4 Q, in vec2  U)\n{\n    \/\/ THIS PIXEL\n    Q = A(U);\n    float pq = p(Q);\n    \/\/ NEIGHBORHOOD\n    vec4 \n        n = A(U+vec2(0,1)),\n        e = A(U+vec2(1,0)),\n        s = A(U-vec2(0,1)),\n        w = A(U-vec2(1,0));\n    \/\/ GRADIENT of PRESSURE\n    float px = 0.25*(p(e)-p(w));\n    float py = 0.25*(p(n)-p(s)); \n    \t\t\/\/ boundary Energy exchange in :   \n    Q += 0.25*(n.w + e.y + s.z + w.x)\n        \t\/\/ boundary Energy exchange out :\n        \t-pq\n        \t\/\/ dV\/dt = dP\/dx,  dEnergy In dTime = dEnergy in dSpace\n        \t-vec4(px,-px,py,-py);\n    \n    \n    \/\/ boundary conditions\n   \tif (iFrame < 1) Q = vec4(.2);\n    if (iMouse.z>0.&&length(U-iMouse.xy)<10.) {\n    \tQ = pq+.1*vec4(sin(iTime),-sin(iTime),cos(iTime),-cos(iTime));;\n    }\n    else if (length(U-vec2(.1,.5)*R)<15.) {\n    \tQ.xy += 0.01*vec2(1,-1)\/(1.+pq);\n    }\n    if(U.x<3.||R.x-U.x<3.||U.y<3.||R.y-U.y<3.)Q = vec4(p(Q));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define T(U) texture(iChannel0,(U)\/R)\nvec2 h(vec2 p) \/\/ Dave H\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"\/\/ FLUID EVOLUTION\n\/\/ Velocity\nvec2 v (vec4 b) {\n\treturn vec2(b.x-b.y,b.z-b.w);\n}\n\/\/ Pressure\nfloat p (vec4 b) {\n\treturn 0.25*(b.x+b.y+b.z+b.w);\n}\n\/\/ TRANSLATE COORD BY Velocity THEN LOOKUP STATE\nvec4 A(vec2 U) {\n    U-=.5*v(T(U));\n    U-=.5*v(T(U));\n\treturn T(U);\n}\nvoid mainImage( out vec4 Q, in vec2  U)\n{\n    \/\/ THIS PIXEL\n    Q = A(U);\n    float pq = p(Q);\n    \/\/ NEIGHBORHOOD\n    vec4 \n        n = A(U+vec2(0,1)),\n        e = A(U+vec2(1,0)),\n        s = A(U-vec2(0,1)),\n        w = A(U-vec2(1,0));\n    \/\/ GRADIENT of PRESSURE\n    float px = 0.25*(p(e)-p(w));\n    float py = 0.25*(p(n)-p(s)); \n    \t\t\/\/ boundary Energy exchange in :   \n    Q += 0.25*(n.w + e.y + s.z + w.x)\n        \t\/\/ boundary Energy exchange out :\n        \t-pq\n        \t\/\/ dV\/dt = dP\/dx,  dEnergy In dTime = dEnergy in dSpace\n        \t-vec4(px,-px,py,-py);\n    \n    \n    \/\/ boundary conditions\n   \tif (iFrame < 1) Q = vec4(.2);\n    if (iMouse.z>0.&&length(U-iMouse.xy)<10.) {\n    \tQ = pq+.1*vec4(sin(iTime),-sin(iTime),cos(iTime),-cos(iTime));;\n    }\n    else if (length(U-vec2(.1,.5)*R)<15.) {\n    \tQ.xy += 0.01*vec2(1,-1)\/(1.+pq);\n    }\n    if(U.x<3.||R.x-U.x<3.||U.y<3.||R.y-U.y<3.)Q = vec4(p(Q));\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"\/\/ FLUID EVOLUTION\n\/\/ Velocity\nvec2 v (vec4 b) {\n\treturn vec2(b.x-b.y,b.z-b.w);\n}\n\/\/ Pressure\nfloat p (vec4 b) {\n\treturn 0.25*(b.x+b.y+b.z+b.w);\n}\n\/\/ TRANSLATE COORD BY Velocity THEN LOOKUP STATE\nvec4 A(vec2 U) {\n    U-=.5*v(T(U));\n    U-=.5*v(T(U));\n\treturn T(U);\n}\nvoid mainImage( out vec4 Q, in vec2  U)\n{\n    \/\/ THIS PIXEL\n    Q = A(U);\n    float pq = p(Q);\n    \/\/ NEIGHBORHOOD\n    vec4 \n        n = A(U+vec2(0,1)),\n        e = A(U+vec2(1,0)),\n        s = A(U-vec2(0,1)),\n        w = A(U-vec2(1,0));\n    \/\/ GRADIENT of PRESSURE\n    float px = 0.25*(p(e)-p(w));\n    float py = 0.25*(p(n)-p(s)); \n    \t\t\/\/ boundary Energy exchange in :   \n    Q += 0.25*(n.w + e.y + s.z + w.x)\n        \t\/\/ boundary Energy exchange out :\n        \t-pq\n        \t\/\/ dV\/dt = dP\/dx,  dEnergy In dTime = dEnergy in dSpace\n        \t-vec4(px,-px,py,-py);\n    \n    \n    \/\/ boundary conditions\n   \tif (iFrame < 1) Q = vec4(.2);\n    if (iMouse.z>0.&&length(U-iMouse.xy)<10.) {\n    \tQ = pq+.1*vec4(sin(iTime),-sin(iTime),cos(iTime),-cos(iTime));;\n    }\n    else if (length(U-vec2(.1,.5)*R)<15.) {\n    \tQ.xy += 0.01*vec2(1,-1)\/(1.+pq);\n    }\n    if(U.x<3.||R.x-U.x<3.||U.y<3.||R.y-U.y<3.)Q = vec4(p(Q));\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":260,"channel":0}],"code":"\/\/ FLUID EVOLUTION\n\/\/ Velocity\nvec2 v (vec4 b) {\n\treturn vec2(b.x-b.y,b.z-b.w);\n}\n\/\/ Pressure\nfloat p (vec4 b) {\n\treturn 0.25*(b.x+b.y+b.z+b.w);\n}\n\/\/ TRANSLATE COORD BY Velocity THEN LOOKUP STATE\nvec4 A(vec2 U) {\n    U-=.5*v(T(U));\n    U-=.5*v(T(U));\n\treturn T(U);\n}\nvoid mainImage( out vec4 Q, in vec2  U)\n{\n    \/\/ THIS PIXEL\n    Q = A(U);\n    float pq = p(Q);\n    \/\/ NEIGHBORHOOD\n    vec4 \n        n = A(U+vec2(0,1)),\n        e = A(U+vec2(1,0)),\n        s = A(U-vec2(0,1)),\n        w = A(U-vec2(1,0));\n    \/\/ GRADIENT of PRESSURE\n    float px = 0.25*(p(e)-p(w));\n    float py = 0.25*(p(n)-p(s)); \n    \t\t\/\/ boundary Energy exchange in :   \n    Q += 0.25*(n.w + e.y + s.z + w.x)\n        \t\/\/ boundary Energy exchange out :\n        \t-pq\n        \t\/\/ dV\/dt = dP\/dx,  dEnergy In dTime = dEnergy in dSpace\n        \t-vec4(px,-px,py,-py);\n    \n    \n    \/\/ boundary conditions\n   \tif (iFrame < 1) Q = vec4(.2);\n    if (iMouse.z>0.&&length(U-iMouse.xy)<10.) {\n    \tQ = pq+.1*vec4(sin(iTime),-sin(iTime),cos(iTime),-cos(iTime));;\n    }\n    else if (length(U-vec2(.1,.5)*R)<15.) {\n    \tQ.xy += 0.01*vec2(1,-1)\/(1.+pq);\n    }\n    if(U.x<3.||R.x-U.x<3.||U.y<3.||R.y-U.y<3.)Q = vec4(p(Q));\n}","name":"Buffer D","description":"","type":"buffer"}]}}