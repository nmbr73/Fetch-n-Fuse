{"Shader":{"ver":"0.1","info":{"id":"7tdXzM","date":"1638891535","viewed":257,"name":"Random Walk e","username":"SnoopethDuckDuck","description":"Goes to bottom left corner after a while. (i think h21 is used not randomly idk)","likes":15,"published":3,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"id":37,"channel":0}],"code":"float h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\n\/\/ number of points\nconst float m = 50.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) \/ iResolution.y;\n       \n    \/\/ increment time (60. * iTime looks smooth, but bugs out faster)\n    float t = floor(20. * iTime) - 1000.;\n\n    \/\/ start point\n    vec2 p = vec2(0.);\n    \n    \/\/ initialise d with \"large\" number\n    float d = 1.;\n    float k = 0.01;\n    for (float i = 0.; i < m; i++) {\n        t++;\n    \n        \/\/ next point in sequence, move further if further along the sequence\n        \/\/ (bad use of h21)\n        vec2 p2 = p + 0.2 * (i\/m) * (vec2(h21(k * vec2(t, t + 1.)), \n                                          h21(k * vec2(t, t - 1.))) - 0.5);\n                                          \n        \/\/ keep points on screen\n        p2 = clamp(p2, -0.48, 0.48);\n    \n        \/\/ length from points \/ segments\n        float d2 = min(0.5 * length(uv - p2), 2. * sdSegment(uv, p, p2));\n        \n        \/\/float k = step(h21(vec2(t, t + 1.)), 0.5);\n        p = p2; \/\/mix(vec2(0.), p2, k);\n        d = min(d, d2);\n        \n        \/\/ fade points \n        d += 0.0005; \/\/ + 0.0007 * cos(3. * iTime + i \/ m);\n    }\n    \n    \/\/ draw stuff\n    float s = smoothstep(-0.03, 0.03, -d + 0.005); \/\/-step(d, 0.01);\n    s = clamp(s, 0., 1.);\n    s *= 4. * s;\/\/4.2 * s * cos(4. * s + 10. * iTime) + 4.5 *s;\n    vec3 col = vec3(s);\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)\/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n","name":"Common","description":"","type":"common"}]}}