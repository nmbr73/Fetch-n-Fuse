{"Shader":{"ver":"0.1","info":{"id":"NdccWN","date":"1653436553","viewed":65,"name":"Generative Beat","username":"jpupper","description":"The seed of the image changes in every beat for making a visual with the same pattern but similar.","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["beat","generative","feedback"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"\n#define fx iResolution.x\/iResolution.y\n#define PI 3.14159235859\nfloat rdm(float p){\n    p*=1234.56;\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    return fract(2.*p*p);\n}\nfloat sm(float m1,float m2, float e){\n\treturn smoothstep(m1,m2,e);\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\nfloat mapr(float _value,float _low2,float _high2) {\n\tfloat val = _low2 + (_high2 - _low2) * (_value - 0.) \/ (1.0 - 0.);\n    \/\/float val = 0.1;\n\treturn val;\n}\nvec3 l2(vec2 uv,float h){\n\n\tfloat red =mapr(rdm(h+201.),0.0,1.);\n\tfloat g =mapr(rdm(h+431.),0.0,1.);\n\tfloat b =mapr(rdm(h+3023.),0.0,1.);\n\n\tfloat spr =1.;\n\tvec2 sp = vec2(mapr(rdm(h+21.),-spr,spr),\n\t \t         mapr(rdm(h+4031.),-spr,spr));\n\tvec3 cf = vec3(red,g,b);\n\n \t\n\tfloat fr = mapr(rdm(h+453.),5.0,30.);\n\tuv.x*=fx;\n\tuv-=vec2(.5);\n\tuv*=rotate2d(rdm(h+324.)*PI*2.);\n\tuv+=vec2(.5);\n\tuv =fract(uv*fr+vec2(iTime)*sp);\n\t \n\t vec2 p =vec2(0.5*fx,.5)-uv;\n\t float r = length(p);\n\n\tfloat ridx = floor(mapr(rdm(h+4685.),0.0,3.0));\n\n\tfloat e = 0.0; \n\n\tif(ridx == 0.0){\n\n\t\te = 1.-sm(0.1,0.2,uv.x);\n\t}else if(ridx == 1.0 ){\n\n \t\te = 1.-sm(0.1,0.2,uv.x);\n \t\te+= 1.-sm(0.1,0.2,uv.y);\n\t}else if(ridx == 2.0){\n\t\tvec2 p =vec2(0.5,.5)-uv;\n\t \tfloat r = length(p);\n\t \te = 1.-sm(0.1,0.2,r);\n\n\t}\n\t \n\t vec3 dib = cf +sin(e*10.+iTime);\n\t return dib;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = gl_FragCoord.xy \/ iResolution.xy;\n\tvec2 puv = uv;\n\t\n\t\n\tfloat t  = floor(iTime*1.0)*0.01;\n\tfloat sr = t;\n vec3 d1 = l2(uv,sr);\n \n\n const int cnt = 5;\n\n vec3 d1aux = d1;\n vec3 fin = d1;\n\tfor(int i =0; i<cnt;i++){\n\t\t\n\t\tvec3 d2 = l2(uv,sr+120.+float(i)*4.);\n\t\tfloat idx = float(i)\/float(cnt)*PI*2.;\n\t\t\/\/MASK CIRCLE : \n\t\tvec2 uv_c = uv;\n\t\tuv_c.x*=fx;\n\n\t\tfloat fase = rdm(sr*465.+float(i))*PI*2.;\n\t\t\n\t\tfloat fase2 = rdm(sr*465.+float(i))*PI*2.;\n\n\t\tfloat ampx = sin(rdm(sr*4587.+float(i)*535.)+iTime*.02)*.15+.05;\n\t\tfloat ampy = cos(rdm(sr*4587.+float(i)*535.)+iTime*.02)*.15+.05;\n\t\tfloat s = mapr(rdm(sr+float(i)*325.),0.1,0.2);\n\t\tvec2 p = vec2(0.5*fx,.5) - uv_c;\n\t\tfloat r = length(p);\n\t\tfloat a = atan(p.x,p.y);\n\n\n\t\tfloat amp_mof = mapr(rdm(sr*6384.+float(i)*5341.+t*10.),0.01,0.08);\n\t\tfloat mof = sin(a*5.+iTime)*amp_mof;\n\t\tfloat e = 0.0;\n\t\t\n\t\tfloat ridx = floor(mapr(rdm(sr+4685.+float(i)*579.*10.),0.0,4.0));\n\t\t\n\t\tif(i == cnt){\n\t\t\tridx = 0.0;\n\t\t}\n\t\t\n\t\te = 1.-sm(s,s+0.8,sin(r*10.+idx*40.+sin(iTime+idx))-mof);\n\n\n\t\tif(fin != d1aux && e > 0.001){\n\t\t\tfin = mix(fin,d2,e);\n\t\t}else{\n\t\t\tvec3 d3 = l2(uv,sr+620.+float(i)*57.);\n\t\t\tfin = mix(fin,d3,e);\n\t\t}\n\t}\n\n\tfloat prom = length(fin);\n\t\n\t\n\tvec4 fb2 = texture(iChannel0,uv);\n\tfloat fb2_prom = (fb2.r+fb2.g+fb2.b)\/3.;\n\t\n\tpuv-=vec2(0.5+fb2_prom*.001);\n\tpuv*= scale(vec2(0.995+fb2_prom*.0001));\n\tpuv+=vec2(0.5-fb2_prom*.001);\n\t\n\tvec4 fb = texture(iChannel0,puv);\n\t\t\n\tif(prom > 0.995){\n\t\tfin = vec3(0.0);\n\t}\n\t\n\tfloat prom2 = (fin.r+fin.g+fin.b)\/3.;\n\t\n\tfin = smoothstep(0.1,0.9,fin);\n\tif( prom2 < 0.2){\n\t\tfin = fb.rgb*.992;\n\t}\n\t\n\tfragColor = vec4(fin, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\n#define fx iResolution.x\/iResolution.y\n#define PI 3.14159235859\nfloat rdm(float p){\n    p*=1234.56;\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    return fract(2.*p*p);\n}\nfloat sm(float m1,float m2, float e){\n\treturn smoothstep(m1,m2,e);\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\nfloat mapr(float _value,float _low2,float _high2) {\n\tfloat val = _low2 + (_high2 - _low2) * (_value - 0.) \/ (1.0 - 0.);\n    \/\/float val = 0.1;\n\treturn val;\n}\nvec3 l2(vec2 uv,float h){\n\n\tfloat red =mapr(rdm(h+201.),0.0,1.);\n\tfloat g =mapr(rdm(h+431.),0.0,1.);\n\tfloat b =mapr(rdm(h+3023.),0.0,1.);\n\n\tfloat spr =1.;\n\tvec2 sp = vec2(mapr(rdm(h+21.),-spr,spr),\n\t \t         mapr(rdm(h+4031.),-spr,spr));\n\tvec3 cf = vec3(red,g,b);\n\n \t\n\tfloat fr = mapr(rdm(h+453.),5.0,30.);\n\tuv.x*=fx;\n\tuv-=vec2(.5);\n\tuv*=rotate2d(rdm(h+324.)*PI*2.);\n\tuv+=vec2(.5);\n\tuv =fract(uv*fr+vec2(iTime)*sp);\n\t \n\t vec2 p =vec2(0.5*fx,.5)-uv;\n\t float r = length(p);\n\n\tfloat ridx = floor(mapr(rdm(h+4685.),0.0,3.0));\n\n\tfloat e = 0.0; \n\n\tif(ridx == 0.0){\n\n\t\te = 1.-sm(0.1,0.2,uv.x);\n\t}else if(ridx == 1.0 ){\n\n \t\te = 1.-sm(0.1,0.2,uv.x);\n \t\te+= 1.-sm(0.1,0.2,uv.y);\n\t}else if(ridx == 2.0){\n\t\tvec2 p =vec2(0.5,.5)-uv;\n\t \tfloat r = length(p);\n\t \te = 1.-sm(0.1,0.2,r);\n\n\t}\n\t \n\t vec3 dib = cf +sin(e*10.+iTime);\n\t return dib;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = gl_FragCoord.xy \/ iResolution.xy;\n\tvec2 puv = uv;\n\t\n\t\n\tfloat t  = floor(iTime*1.0)*0.01;\n\tfloat sr = t;\n vec3 d1 = l2(uv,sr);\n \n\n const int cnt = 5;\n\n vec3 d1aux = d1;\n vec3 fin = d1;\n\tfor(int i =0; i<cnt;i++){\n\t\t\n\t\tvec3 d2 = l2(uv,sr+120.+float(i)*4.);\n\t\tfloat idx = float(i)\/float(cnt)*PI*2.;\n\t\t\/\/MASK CIRCLE : \n\t\tvec2 uv_c = uv;\n\t\tuv_c.x*=fx;\n\n\t\tfloat fase = rdm(sr*465.+float(i))*PI*2.;\n\t\t\n\t\tfloat fase2 = rdm(sr*465.+float(i))*PI*2.;\n\n\t\tfloat ampx = sin(rdm(sr*4587.+float(i)*535.)+iTime*.02)*.15+.05;\n\t\tfloat ampy = cos(rdm(sr*4587.+float(i)*535.)+iTime*.02)*.15+.05;\n\t\tfloat s = mapr(rdm(sr+float(i)*325.),0.1,0.2);\n\t\tvec2 p = vec2(0.5*fx,.5) - uv_c;\n\t\tfloat r = length(p);\n\t\tfloat a = atan(p.x,p.y);\n\n\n\t\tfloat amp_mof = mapr(rdm(sr*6384.+float(i)*5341.+t*10.),0.01,0.08);\n\t\tfloat mof = sin(a*5.+iTime)*amp_mof;\n\t\tfloat e = 0.0;\n\t\t\n\t\tfloat ridx = floor(mapr(rdm(sr+4685.+float(i)*579.*10.),0.0,4.0));\n\t\t\n\t\tif(i == cnt){\n\t\t\tridx = 0.0;\n\t\t}\n\t\t\n\t\te = 1.-sm(s,s+0.8,sin(r*10.+idx*40.+sin(iTime+idx))-mof);\n\n\n\t\tif(fin != d1aux && e > 0.001){\n\t\t\tfin = mix(fin,d2,e);\n\t\t}else{\n\t\t\tvec3 d3 = l2(uv,sr+620.+float(i)*57.);\n\t\t\tfin = mix(fin,d3,e);\n\t\t}\n\t}\n\n\tfloat prom = length(fin);\n\t\n\t\n\tvec4 fb2 = texture(iChannel0,uv);\n\tfloat fb2_prom = (fb2.r+fb2.g+fb2.b)\/3.;\n\t\n\tpuv-=vec2(0.5+fb2_prom*.001);\n\tpuv*= scale(vec2(0.995+fb2_prom*.0001));\n\tpuv+=vec2(0.5-fb2_prom*.001);\n\t\n\tvec4 fb = texture(iChannel0,puv);\n\t\t\n\tif(prom > 0.995){\n\t\tfin = vec3(0.0);\n\t}\n\t\n\tfloat prom2 = (fin.r+fin.g+fin.b)\/3.;\n\t\n\tfin = smoothstep(0.1,0.9,fin);\n\tif( prom2 < 0.2){\n\t\tfin = fb.rgb*.992;\n\t}\n\t\n\tfragColor = vec4(fin, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}}