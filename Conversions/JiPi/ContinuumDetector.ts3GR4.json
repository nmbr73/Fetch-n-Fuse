{"Shader":{"ver":"0.1","info":{"id":"ts3GR4","date":"1567888715","viewed":518,"name":"Continuum Detector","username":"wyatt","description":"weighted diffusion","likes":15,"published":3,"flags":32,"usePreview":0,"tags":["diffusion"],"hasliked":0},"renderpass":[{"inputs":[{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)\/R)\n#define B(U) texture(iChannel1,(U)\/R)\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    \n    \n    Q = A(U);\n    vec4 d = vec4(0);\n    float w = 0.;\n    vec2 g = vec2(0);\n    for (int x = -1; x <= 1; x++)\n    for (int y = -1; y <= 1; y++) {\n        vec2 u = vec2(x,y);\n        vec4 a = A(U+u);\n        vec4 d = a - Q;\n        float l = length(d);\n        d += a - Q;\n        w += l;\n        g += l * u;\n    }\n    vec3 n = normalize(vec3(g,.001));\n    Q *= 0.7+0.5*dot(n,normalize(vec3(1,1,1)));\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":260,"src":"\/media\/previz\/buffer03.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)\/R)\n#define B(U) texture(iChannel1,(U)\/R)\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    \n    \n    Q = A(U);\n    vec4 s = vec4(0);\n    float n = 1e-5, w = 0.;\n    vec2 g = vec2(0);\n    for (int x = -1; x <= 1; x++)\n    for (int y = -1; y <= 1; y++) {\n        vec2 u = vec2(x,y);\n        vec4 a = A(U+u);\n        vec4 d = a - Q;\n        float l = length(d);\n        w += l;\n        g += l * u;\n        float weight = max(exp(-200.*l*l)-.2,-1e-3);\n       \tn+=weight;\n        s += a*weight;\n    }\n    Q += (1.-w\/8.)*(s\/n-Q);\n    Q = clamp(Q,0.,1.);\n    if (iFrame < 20) Q = B(U);\n    if (iMouse.z>0.) Q = mix(Q,Q,exp(-50.*length(U-iMouse.xy)\/R.y));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)\/R)\n#define B(U) texture(iChannel1,(U)\/R)\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    \n    \n    Q = A(U);\n    vec4 s = vec4(0);\n    float n = 1e-5, w = 0.;\n    vec2 g = vec2(0);\n    for (int x = -1; x <= 1; x++)\n    for (int y = -1; y <= 1; y++) {\n        vec2 u = vec2(x,y);\n        vec4 a = A(U+u);\n        vec4 d = a - Q;\n        float l = length(d);\n        w += l;\n        g += l * u;\n        float weight = max(exp(-200.*l*l)-.2,-1e-3);\n       \tn+=weight;\n        s += a*weight;\n    }\n    Q += (1.-w\/8.)*(s\/n-Q);\n    Q = clamp(Q,0.,1.);\n    if (iFrame < 20) Q = B(U);\n    if (iMouse.z>0.) Q = mix(Q,Q,exp(-50.*length(U-iMouse.xy)\/R.y));\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":259,"channel":0}],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)\/R)\n#define B(U) texture(iChannel1,(U)\/R)\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    \n    \n    Q = A(U);\n    vec4 s = vec4(0);\n    float n = 1e-5, w = 0.;\n    vec2 g = vec2(0);\n    for (int x = -1; x <= 1; x++)\n    for (int y = -1; y <= 1; y++) {\n        vec2 u = vec2(x,y);\n        vec4 a = A(U+u);\n        vec4 d = a - Q;\n        float l = length(d);\n        w += l;\n        g += l * u;\n        float weight = max(exp(-200.*l*l)-.2,-1e-3);\n       \tn+=weight;\n        s += a*weight;\n    }\n    Q += (1.-w\/8.)*(s\/n-Q);\n    Q = clamp(Q,0.,1.);\n    if (iFrame < 20) Q = B(U);\n    if (iMouse.z>0.) Q = mix(Q,Q,exp(-50.*length(U-iMouse.xy)\/R.y));\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":5,"src":"\/media\/a\/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":259,"src":"\/media\/previz\/buffer02.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":260,"channel":0}],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)\/R)\n#define B(U) texture(iChannel1,(U)\/R)\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    \n    \n    Q = A(U);\n    vec4 s = vec4(0);\n    float n = 1e-5, w = 0.;\n    vec2 g = vec2(0);\n    for (int x = -1; x <= 1; x++)\n    for (int y = -1; y <= 1; y++) {\n        vec2 u = vec2(x,y);\n        vec4 a = A(U+u);\n        vec4 d = a - Q;\n        float l = length(d);\n        w += l;\n        g += l * u;\n        float weight = max(exp(-200.*l*l)-.2,-1e-3);\n       \tn+=weight;\n        s += a*weight;\n    }\n    Q += (1.-w\/8.)*(s\/n-Q);\n    Q = clamp(Q,0.,1.);\n    if (iFrame < 20) Q = B(U);\n    if (iMouse.z>0.) Q = mix(Q,Q,exp(-50.*length(U-iMouse.xy)\/R.y));\n}","name":"Buffer D","description":"","type":"buffer"}]}}