{"Shader":{"ver":"0.1","info":{"id":"4tyXDG","date":"1485596298","viewed":701,"name":"RGB waves","username":"piotrekli","description":"modified [url=https:\/\/www.shadertoy.com\/view\/MlySzh]MlySzh[\/url]","likes":12,"published":3,"flags":32,"usePreview":0,"tags":["2d","diffusion","reaction"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"vec4 light(sampler2D src, vec2 fragCoord)\n{\n    vec4 l = vec4(0.0);\n    l += texture(src, (fragCoord+vec2( 0,  0))\/iResolution.xy);\n    l -= texture(src, (fragCoord+vec2(-1,  0))\/iResolution.xy)*0.5;\n    l -= texture(src, (fragCoord+vec2( 0, -1))\/iResolution.xy)*0.5;\n    return l;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = texture(iChannel0, fragCoord\/iResolution.xy);\n    vec4 l = light(iChannel0, fragCoord);\n\tfragColor.xyz = sqrt(col.xyz*7.5*col.w)-l.www*15.0+l.xyz*4.0;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"#define rnd(U) hash12(U)\n\n#define T(i,j) texture(iChannel0, fract( ( U +vec2(i,j) ) \/ iResolution.xy) )\n\n#define PREVIEW (iResolution.y < 250.0)\n\n\/*\n#define K 0.3\n#define L 0.7\n#define M 0.6\n*\/\n\n\n#define K 0.44\n#define L 0.7\n#define M 1.0\n\n\n\/*\n#define K 0.7\n#define L 1.4\n#define M 0.3\n*\/\n\n\/*\n#define K 0.35\n#define L 0.84\n#define M 0.4\n*\/\n\n\/*\n#define K 0.2\n#define L 0.62\n#define M 1.0\n*\/\n\n\/*\n#define K 0.01\n#define L 0.49\n#define M 10.0\n*\/\n\n\/*\n#define K 0.1\n#define L 0.54\n#define M 1.6\n*\/\n\n\/*\n#define K 0.06\n#define L 0.52\n#define M 2.65\n*\/\n\n#define TIMESTEP (PREVIEW ? 1.0 : 0.3)\n\n\/\/ https:\/\/www.shadertoy.com\/view\/4djSRW\n#define HASHSCALE1 .1031\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 hsv2rgb(vec3 hsv)\n{\n    vec3 rgb;\n    float h = mod(hsv.x * 6.0, 6.0);\n    float q = h-float(int(h));\n    if      (h < 1.0) rgb = vec3( 1.0,    q,  0.0);\n    else if (h < 2.0) rgb = vec3(1.-q,  1.0,  0.0);\n    else if (h < 3.0) rgb = vec3( 0.0,  1.0,    q);\n    else if (h < 4.0) rgb = vec3( 0.0, 1.-q,  1.0);\n    else if (h < 5.0) rgb = vec3(   q,  0.0,  1.0);\n    else if (h < 6.0) rgb = vec3( 1.0,  0.0, 1.-q);\n    rgb = hsv.z*(1.0-hsv.y*(1.0-rgb));\n    return rgb;\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 uv = U\/iResolution.xy;\n    if (iTime < 1.5 && !PREVIEW)\n    {\n        O = vec4(0.0);\n        return;\n    }\n    vec4 old = T(0, 0);\n\tO = ( T(-1, 1) + T(0, 1) + T(1, 1) \n        + T(-1, 0) + T(0, 0) + T(1, 0) \n        + T(-1,-1) + T(0,-1) + T(1,-1) ) \/ 9.;\n    O *= 2.0-O;\n\n    if (iFrame==0) O = vec4(.4);\n    float time = mod(iTime, 1000.01246341);\n    for (int i=0; i<3; ++i)\n    {\n        if (rnd(U-9.*time+.0+0.03*float(i))>.9999) O[i] = 1.0;\n        if (rnd(U-9.*time+.1+0.03*float(i))>.9999) O[i] = 0.0;\n    }\n    float m = iMouse.z > 0.0 ? max(0.0, 1.0-length(iMouse.xy-U)\/10.0) : 0.0;\n    if (rnd(U-9.*time+.23)<m)\n    {\n        for (int i=0; i<4; ++i)\n        \tO[i] += 4.0*m*(rnd(U-9.*time+.3+0.03*float(i))-0.5);\n    }\n    O.w = mix(O.w, dot(O.xyz, O.yzx)\/3.0, K)*L;\n    O.xyz -= O.w*(O.xyz+M);\n    for (int i=0; i<3; ++i)\n    {\n    \tif (O[i] < 0.0) O[i] = 0.0;\n    }\n    O.xyz *= O.w*0.5+hsv2rgb(vec3(iTime*0.04+O.w*4.0, 0.1, 1.0));\n    O = mix(old.xyzw, O.xyzw, TIMESTEP);\n}","name":"Buf A","description":"","type":"buffer"}]}}