{
 "ver": "0.1",
 "info": {
  "id": "NtyyRm",
  "date": "0",
  "viewed": 0,
  "name": "TL Noise vortex JiPi",
  "description": "Atom distorted\n",
  "likes": 0,
  "published": "Private",
  "usePreview": 0,
  "tags": [
   "tlnoisevortex"
  ],
  "hasliked": 0,
  "parentid": "Ns3cDN",
  "parentname": "TL // Noise vortex"
 },
 "renderpass": [
  {
   "inputs": [],
   "outputs": [
    {
     "id": "4dfGRr",
     "channel": 0
    }
   ],
   "code": "mat2 r2d(float a) {\n\tfloat c = cos(a), s = sin(a);\n    return mat2(\n        c, s,\n        -s, c\n    );\n}\nfloat hash( vec2 p )\n{\n    return fract( sin( dot(p, vec2( 15.79, 81.93  ) ) * 45678.9123 ) );\n}\n\nfloat valueNoise( vec2 p )\n{\n\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    \n    f = f*f*(3.0 - 2.0*f);\n    \n\n    float bottomOfGrid =    mix( hash( i + vec2( 0.0, 0.0 ) ), hash( i + vec2( 1.0, 0.0 ) ), f.x );\n\n    float topOfGrid =       mix( hash( i + vec2( 0.0, 1.0 ) ), hash( i + vec2( 1.0, 1.0 ) ), f.x );\n\n\n    float t = mix( bottomOfGrid, topOfGrid, f.y );\n    \n    return t;\n}\n\nfloat fbm( vec2 uv )\n{\n    float sum = 0.00;\n    float amp = 0.7;\n    \n    for( int i = 0; i < 4; ++i )\n    {\n        sum += valueNoise( uv ) * amp;\n        uv += uv * 1.2;\n        amp *= 0.4;\n    }\n    \n    return sum;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float time = iTime;\n    float rotTime = sin(time);\n    \n    vec3 color1 = vec3(0.8, 0.2, 0.);\n    vec3 color2 = vec3(.0, 0.2, 0.8);\n    \n    vec2 uv = ( fragCoord -.5*iResolution.xy )/iResolution.y;\n\n    vec3 destColor = vec3(2.0 * rotTime, .0, 0.5);\n    float f = 10.15;\n    float maxIt = 18.0;\n    vec3 shape = vec3(0.);\n    for(float i = 0.0; i < maxIt; i++){\n        float s = sin((time / 111.0) + i * cos(iTime*0.02+i)*0.05+0.05);\n        float c = cos((time / 411.0) + i * (sin(time*0.02+i)*0.05+0.05));\n        c += sin(iTime);\n        f = (.005) / abs(length(uv / vec2(c, s)) - 0.4);\n        f += exp(-400.*distance(uv, vec2(c,s)*0.5))*2.;\n        // Mas Particulas\n        f += exp(-200.*distance(uv, vec2(c,s)*-0.5))*2.;\n        // Circulito\n        f += (.008) / abs(length(uv/2. / vec2(c/4. + sin(time*4.), s/4.)));\n        f += fbm( uv * 20.5 )*0.05;\n        float idx = float(i)/ float(maxIt);\n        idx = fract(idx*2.);\n        vec3 colorX = mix(color1, color2,idx);\n        shape += f * colorX;\n        \n        uv += fbm( uv * 20.5 )*0.02;\n        uv *= r2d(iTime*0.1 + cos(i*50.)*f);\n        \n    }\n    \n    // vec3 shape = vec3(destColor * f);\n    // Activar modo falopa fuerte\n    // shape = sin(shape*10.+time);\n    fragColor = vec4(shape,1.0);\n}",
   "name": "Image",
   "description": "",
   "type": "image"
  }
 ]
}