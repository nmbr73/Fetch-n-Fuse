{"Shader":{"ver":"0.1","info":{"id":"7tXBz7","date":"1650648862","viewed":13,"name":"paint with deformations","username":"FabriceNeyret2","description":"paint deformations with mouse. \n- click and drag: displace. \n- LEFT\/RIGHT keys + click or click&drag: rotate to left or right.\n- UP\/DOWN keys + click or click&drag:  grow\/shrink.\n- DEL: undo\n- rewind: reset","likes":1,"published":3,"flags":48,"usePreview":0,"tags":["swirl","distortion","vortex","uvmap","vorticity","divergencefree"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/media\/a\/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"\/\/ variant of   swirl2 https:\/\/shadertoy.com\/view\/7l2cRz\n\/\/            + displacement https:\/\/www.shadertoy.com\/view\/sdjyRV\n\n\/\/ === applies the uv field to a texture =================\n\n\/\/#define fwidth(v) length(vec2(dFdx(v),dFdy(v)))\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u = T(u).xy;                    \/\/ distorted uv field\n    O = texture( iChannel1, u );    \/\/ apply map\n    \n    float v = length(u-.5);         \/\/ apply circle\n    O = mix( O, vec4(1,0,0,0), smoothstep( 1.5, 0.,  abs(v-.3)\/fwidth(v) ) );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\/\/ === distort the uv field ====================\n\n#define keyDown(a) ( texelFetch(iChannel3,ivec2(a,0),0).x > 0.)\n\n#define ortho(D)     vec2( -(D).y, (D).x )              \/\/ vec ortho to D\n\/\/#define S(D)       ortho(D) \/ max( dot(D,D) , 1e-3 )  \/\/ irrotational swirl\n  #define S(D)       ortho(D) \/ max( length(D)*smoothstep(0.,3.,length(D)) , 1e-3 )  \/ 6e4 \/\/ irrotational swirl\n\/\/#define S(D)       ortho(D) * smoothstep(1.,0.,length(D)\/.25) *.1\n\nfloat f(float x) {\n    x = abs(x)\/.2; \n\treturn x < 1. ? - .02 * smoothstep(1.,0.,x) : 0.;\n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    if ( u== vec2(.5) )                                 \/\/ previous mouse pos\n      { O = vec4(iMouse.xy*sign(iMouse.z), T(0).xy);return; }\n      \n    vec2 U = u \/ R.y, V,\n         M =   iMouse.xy \/ R.y,\n         d = ( iMouse.xy - T(0).zw ) \/ R.y;             \/\/ mouse drag direction\n    if (iMouse.z > 0.)  {                               \/\/ if click\n       float s = keyDown(37) ? -1. : keyDown(39) ? 1.   \/\/ key pressed\n               : keyDown(38) ? 2.  : keyDown(40) ? -2. : 0., l;\n       if ( abs(s) == 1. )                              \/\/ --- left or right key : swirl\n           U +=  S(U-M)  * sign(s);                 \/\/ swirl field\n       else  if ( abs(s) == 2. )                        \/\/ up or bottom key : grow\/shrink\n           l = length(U-M),\n           U = M + (U-M) * ( 1. + f(l) * sign(s) ); \n       else if ( T(0).z > 0. )                          \/\/ --- drag & no key: displace\n           U -= .5*d *smoothstep(.2,0., length(U-M) );  \/\/ displacement field\n    }\n    O = texture( iChannel0, U *R.y\/R ); \n    if keyDown(8) O = texture( iChannel1, (N-1. + U *R.y\/R ) \/ N ); \n    \n    if ( iFrame < 1 ) O = vec4(u\/R,0,0);                \/\/ init uv field\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R      iResolution.xy\n#define T(U)   texelFetch( iChannel0, ivec2(U), 0 )\n\n#define N 2.   \/\/ N\u00b2 undo levels\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"\/\/ === undo buffer \n\/\/ stores N\u00b2 frames: if click, or every second if mouse drag\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if (iMouse.w <= 0. && ( iMouse.z<=0. || iFrame%60>0 ))  { O = T(U); return; }\n    U *= N\/R;\n    vec2 I = floor(U), F = fract(U);\n    if (I.x>0.) I.x--; else I.x = N-1., I.y--;\n    O = I.y < 0. ? texture(iChannel1, F)\n                 : texture(iChannel0,(I+F)\/N);\n}","name":"Buffer B","description":"","type":"buffer"}]}}