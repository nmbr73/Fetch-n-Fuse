{"Shader":{"ver":"0.1","info":{"id":"4ltyWj","date":"1534108700","viewed":701,"name":"Waveguide mesh","username":"gleurop","description":"Modeling dispersion of waves on a 2D membrane. Commonly used for audio reverb.\n\nUse the mouse to draw.","likes":10,"published":3,"flags":32,"usePreview":0,"tags":["water","physics","membrane","waveguide"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord\/iResolution.xy;\n    float v = texture(iChannel0, uv).x;\n    fragColor = vec4(v);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"vec4 bufB( in vec2 coord )\n{\n    vec2 uv = coord\/iResolution.xy;\n    return texture(iChannel1, uv)*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 c )\n{\n    vec2 uv = c\/iResolution.xy;\n    vec2 e = vec2(1, 0);\n    float v = 0.5*(bufB(c-e.xy).x + bufB(c-e.yx).y + bufB(c+e.xy).z + bufB(c+e.yx).w);\n    fragColor = vec4(v);\n    if (iMouse.z > 0.0)\n    \tfragColor += vec4(sin(max(0.0,25.0-0.5*distance(c, iMouse.xy))));\n    fragColor = fragColor*0.5+0.5;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":258,"src":"\/media\/previz\/buffer01.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":258,"channel":0}],"code":"const float DECAY = 0.999;\n\nfloat bufA( in vec2 coord )\n{\n    vec2 uv = coord\/iResolution.xy;\n    return texture(iChannel0, uv).a*2.0-1.0;\n}\nvec4 bufB( in vec2 coord )\n{\n    vec2 uv = coord\/iResolution.xy;\n    return texture(iChannel1, uv)*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 c )\n{\n    vec2 uv = c\/iResolution.xy;\n    vec2 e = vec2(1, 0);\n    float p = bufA(c);\n    fragColor = vec4(\n    \tp-bufB(c+e.xy).z,\n        p-bufB(c+e.yx).w,\n        p-bufB(c-e.xy).x,\n        p-bufB(c-e.yx).y\n    )*DECAY*0.5+0.5;\n}","name":"Buffer B","description":"","type":"buffer"}]}}