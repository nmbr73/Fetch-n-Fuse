{
 "ver": "0.1",
 "info": {
  "id": "ftcfDM",
  "date": "0",
  "viewed": 0,
  "name": "TinyPaintStreams JiPi",
  "description": "Not as physically accurate as [url]https://www.shadertoy.com/view/WtfyDj[/url], but 10x smaller",
  "likes": 0,
  "published": "Private",
  "usePreview": 0,
  "tags": [
   "simulation",
   "fluid",
   "convolution",
   "2tweets",
   "golf"
  ],
  "hasliked": 0,
  "parentid": "7lVSDD",
  "parentname": "Tiny paint streams (530char)"
 },
 "renderpass": [
  {
   "inputs": [
    {
     "id": "4dXGR8",
     "filepath": "/media/previz/buffer00.png",
     "type": "buffer",
     "channel": 0,
     "sampler": {
      "filter": "nearest",
      "wrap": "repeat",
      "vflip": "true",
      "srgb": "false",
      "internal": "byte"
     },
     "published": 1
    }
   ],
   "outputs": [
    {
     "id": "4dfGRr",
     "channel": 0
    }
   ],
   "code": "M - 1. + A.w * vec4(0, A.z, 1. - A.z, 0); }",
   "name": "Image",
   "description": "",
   "type": "image"
  },
  {
   "inputs": [
    {
     "id": "4dXGR8",
     "filepath": "/media/previz/buffer00.png",
     "type": "buffer",
     "channel": 0,
     "sampler": {
      "filter": "nearest",
      "wrap": "repeat",
      "vflip": "true",
      "srgb": "false",
      "internal": "byte"
     },
     "published": 1
    }
   ],
   "outputs": [
    {
     "id": "4dXGR8",
     "channel": 0
    }
   ],
   "code": "M; float G, m = A.w;\n    // iterate over neighbouring cells\n    // A.xy = velocity\n    // A.z = pigment\n    // A.w = density\n    for(int k = 81; k-->0;)\n        i = vec2(k%9,k/9)-4.,\n        x = i + A.xy, // move particle according to velocity\n\n        // Gaussian diffusion, sigma=sqrt(.5)\n        G = A.w / exp(dot(x,x)) / 3.142,\n\n        // advection\n        r += vec4(A.xyz, 1) * G,\n    \n        // pressure forces (smoothed particle hydrodynamics)\n        f -= ( m*m-m       // pressure at current position\n                           // density * (density - reference fluid density)\n             + A.w*A.w-A.w // pressure at neighbour position\n             ) * G * x;    // gradient of smoothing kernel\n\n    if(r.w > 0.) // not vacuum\n        r.xyz /= r.w, // convert momentum to velocity, normalise pigment\n        r.xy += clamp(f / r.w, -.1, .1); // acceleration\n    \n    // gravity\n    r.y -= .005;\n\n    // boundary\n    if(u.y < 9.) r.y += 1.;\n    \n    // streams\n    r = length(u - R * vec2(.2, .9)) < 9. ?\n            vec4(sin(iTime) + 2., -1, 0, 1) :\n        length(u - R * vec2(.8, .9)) < 9. ?\n            vec4(sin(iTime) - 2., -1, 1, 1) :\n        iFrame < 2 && u.y > .8*R.y ? // init\n            vec4(0,0, u.x < R.x/2., 1) :\n        r;\n}",
   "name": "Buffer A",
   "description": "",
   "type": "buffer"
  },
  {
   "inputs": [],
   "outputs": [],
   "code": "#define R iResolution.xy\n#define A texture(iChannel0,vec2(u+i)/R)\n#define M void mainImage(out vec4 r, vec2 u) { vec2 x, i = u-u, f = i; r -= r",
   "name": "Common",
   "description": "",
   "type": "common"
  }
 ]
}