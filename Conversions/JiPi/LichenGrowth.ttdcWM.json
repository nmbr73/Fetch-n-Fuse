{"Shader":{"ver":"0.1","info":{"id":"ttdcWM","date":"1609271833","viewed":272,"name":"Lichen Growth","username":"andrinr","description":"Organism needs food to survive, food gets eaten, food regrows","likes":10,"published":3,"flags":32,"usePreview":0,"tags":["cells","growth"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":37,"channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \/\/ Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord\/iResolution.xy;\n    vec3 buffer = texture(iChannel0,uv).xyz;\n    fragColor = vec4(vec3(buffer.x),1.);\n    \/\/fragColor = vec4(buffer,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/media\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":257,"channel":0}],"code":"\/\/ Andrin Rehmann\n\/\/ 2020\n\/\/ andrinrehmann.ch\n\/\/ andrinrehmann@gmail.com\n\n#define EXPANSION 2.5\n\n\/\/note: uniformly distributed, normalized rand, [0;1[\nfloat nrand( vec2 n )\n{\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nfloat rand( vec2 uv )\n{\n\tfloat t = fract( iTime );\n\treturn nrand( uv + 0.07*t );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat du = 1. \/ iResolution.x;\n    float dv = 1. \/ iResolution.y;\n    \n\tvec2 uv = fragCoord\/iResolution.xy;\n    \n    \/\/ Cell\n\tfloat y = texture(iChannel0,uv).x;\n    \/\/ food\n    float f = texture(iChannel0,uv).z;\n    \n    \/\/ sum of surrounding y's\n    float s = 1.\/16. * texture(iChannel0,uv + vec2(-du,-dv)).x +\n              3.\/16.  * texture(iChannel0,uv + vec2(-du,0)).x + \n              1.\/16. * texture(iChannel0,uv + vec2(-du,dv)).x + \n              3.\/16.  * texture(iChannel0,uv + vec2(0,-dv)).x + \n              3.\/16.  * texture(iChannel0,uv + vec2(0,dv)).x +\n              1.\/16. * texture(iChannel0,uv + vec2(du,-dv)).x +\n              3.\/16.  * texture(iChannel0,uv + vec2(du,0)).x + \n              1.\/16. * texture(iChannel0,uv + vec2(du,dv)).x;\n\n    \n    if (s > 0.5 && f > 0.5){\n        y += 0.1;\n    }\n    \n    if (y > 0.5){\n        f -= 0.01;\n    }\n    \n    if (f < 0.5){\n        y -= y * 0.1;\n    \n    }\n    \n    f += 0.002;\n    \n    \n    if (distance(iMouse.xy, fragCoord) < 15. && iMouse.z > 0.){\n        f = rand(uv+vec2(0.2));\n        y = rand(uv);\n    }\n    \n    \/\/ Init\n    if (iFrame < 1){\n        y = rand(uv);\n        f = rand(uv+vec2(0.2));\n    }\n    \n    fragColor = vec4(y, 0, f, 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}}